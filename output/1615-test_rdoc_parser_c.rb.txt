#Source[
   #List[
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['require']
         $param: #List[
            $expression: #StringExpr['rdoc/test_case']
         ]
      ]
      $statement: #Class[
         $name: #NameExpr['TestRDocParserC']
         $super: #Field[
            $recv: #NameExpr['RDoc']
            $name: #NameExpr['TestCase']
         ]
         $body: #BlockExpr[
            $main: #List[
               $statement: #FuncDecl[
                  $name: #NameExpr['setup']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #Super['super']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@tempfile']
                           $right: #ApplyExpr[
                              $base: #NameExpr['Tempfile']
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #Self['self']
                                       $recv: #NameExpr['class']
                                    ]
                                    $recv: #NameExpr['name']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['filename']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['@tempfile']
                              $recv: #NameExpr['path']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@top_level']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@store']
                              $recv: #NameExpr['add_file']
                              $param: #List[
                                 $expression: #NameExpr['filename']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@fn']
                           $right: #NameExpr['filename']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@options']
                           $right: #ApplyExpr[
                              $recv: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Options']
                              ]
                              $recv: #NameExpr['new']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Field[
                              $base: #NameExpr['@options']
                              $name: #NameExpr['verbosity']
                           ]
                           $right: #IntExpr['2']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@stats']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Stats']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #NameExpr['@store']
                                 $expression: #IntExpr['0']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['teardown']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #Super['super']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@tempfile']
                           $recv: #NameExpr['close!']
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_class_can_parse']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['c_parser']
                           $right: #Field[
                              $recv: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Parser']
                              ]
                              $name: #NameExpr['C']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['temp_dir']
                           $body: #Block[
                              $body: #List[
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.C']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.C']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.CC']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.CC']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.H']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.H']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.HH']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.HH']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.c']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.c']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.cc']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.cc']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.cpp']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.cpp']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.cxx']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.cxx']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.h']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.h']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.hh']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.hh']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $base: #NameExpr['FileUtils']
                                    $recv: #NameExpr['touch']
                                    $param: #List[
                                       $expression: #StringExpr['file.y']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['assert_equal']
                                    $param: #List[
                                       $expression: #NameExpr['c_parser']
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c_parser']
                                          $recv: #NameExpr['can_parse']
                                          $param: #List[
                                             $expression: #StringExpr['file.y']
                                          ]
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_initialize']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['some_ext']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['add_class']
                              $param: #List[
                                 $expression: #Field[
                                    $recv: #NameExpr['RDoc']
                                    $name: #NameExpr['NormalClass']
                                 ]
                                 $expression: #StringExpr['SomeExt']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['@top_level']
                           $recv: #NameExpr['add_class']
                           $param: #List[
                              $expression: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['SingleClass']
                              ]
                              $expression: #StringExpr['SomeExtSingle']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['@store']
                                 $recv: #NameExpr['cache']
                              ]
                              $index: #List[
                                 $expression: #NameExpr['c_class_variables']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #NameExpr['@fn']
                                 $value: #List[
                                    $hash: #Hash[
                                       $key: #StringExpr['cSomeExt']
                                       $value: #StringExpr['SomeExt']
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['@store']
                                 $recv: #NameExpr['cache']
                              ]
                              $index: #List[
                                 $expression: #NameExpr['c_singleton_class_variables']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #NameExpr['@fn']
                                 $value: #List[
                                    $hash: #Hash[
                                       $key: #StringExpr['cSomeExtSingle']
                                       $value: #StringExpr['SomeExtSingle']
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #Field[
                                    $recv: #NameExpr['RDoc']
                                    $name: #NameExpr['Parser']
                                 ]
                                 $name: #NameExpr['C']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #NameExpr['@top_level']
                                 $expression: #NameExpr['@fn']
                                 $expression: #StringExpr['']
                                 $expression: #NameExpr['@options']
                                 $expression: #NameExpr['@stats']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExt']
                                 $value: #NameExpr['some_ext']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['classes']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExtSingle']
                                 $value: #StringExpr['SomeExtSingle']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['singleton_classes']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExt']
                                 $value: #StringExpr['SomeExt']
                              ]
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExtSingle']
                                 $value: #StringExpr['SomeExtSingle']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['known_classes']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['known_classes']
                              ]
                              $recv: #NameExpr['delete_if']
                              $body: #Block[
                                 $param: #MultipleLeftHandSideExpression[
                                    $item: #NameExpr['key']
                                    $item: #NameExpr['_']
                                 ]
                                 $body: #ApplyExpr[
                                    $base: #ApplyExpr[
                                       $recv: #Field[
                                          $recv: #NameExpr['RDoc']
                                          $name: #NameExpr['KNOWN_CLASSES']
                                       ]
                                       $recv: #NameExpr['keys']
                                    ]
                                    $recv: #NameExpr['include?']
                                    $param: #List[
                                       $expression: #NameExpr['key']
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #NameExpr['known_classes']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_attr_rb_attr']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['void Init_Blah(void) {\n  cBlah = rb_define_class("Blah", rb_cObject);\n\n  /*\n   * This is an accessor\n   */\n  rb_attr(cBlah, rb_intern("accessor"), 1, 1, Qfalse);\n\n  /*\n   * This is a reader\n   */\n  rb_attr(cBlah, rb_intern("reader"), 1, 0, Qfalse);\n\n  /*\n   * This is a writer\n   */\n  rb_attr(cBlah, rb_intern("writer"), 0, 1, Qfalse);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cBlah']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['attrs']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['attributes']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['3']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['attrs']
                                 $recv: #NameExpr['length']
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['attrs']
                                 $recv: #NameExpr['inspect']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['accessor']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['accessor']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['RW']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is an accessor']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['accessor']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['reader']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['reader']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['reader']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['R']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['reader']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is a reader']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['reader']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['writer']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['writer']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['writer']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['W']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['writer']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is a writer']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['writer']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_attr_rb_attr_2']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['void Init_Blah(void) {\n  cBlah = rb_define_class("Blah", rb_cObject);\n\n  /*\n   * This is an accessor\n   */\n  rb_attr(cBlah, rb_intern_const("accessor"), 1, 1, Qfalse);\n\n  /*\n   * This is a reader\n   */\n  rb_attr(cBlah, rb_intern_const("reader"), 1, 0, Qfalse);\n\n  /*\n   * This is a writer\n   */\n  rb_attr(cBlah, rb_intern_const("writer"), 0, 1, Qfalse);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cBlah']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['attrs']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['attributes']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['3']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['attrs']
                                 $recv: #NameExpr['length']
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['attrs']
                                 $recv: #NameExpr['inspect']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['accessor']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['accessor']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['RW']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is an accessor']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['accessor']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['reader']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['reader']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['reader']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['R']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['reader']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is a reader']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['reader']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['writer']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['writer']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['writer']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['W']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['writer']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is a writer']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['writer']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_attr_rb_define_attr']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['void Init_Blah(void) {\n  cBlah = rb_define_class("Blah", rb_cObject);\n\n  /*\n   * This is an accessor\n   */\n  rb_define_attr(cBlah, "accessor", 1, 1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cBlah']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['attrs']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['attributes']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['attrs']
                                 $recv: #NameExpr['length']
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['attrs']
                                 $recv: #NameExpr['inspect']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['accessor']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['attrs']
                              $recv: #NameExpr['shift']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['accessor']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['RW']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['rw']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This is an accessor']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['accessor']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['accessor']
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_aliases']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * This should show up as an alias with documentation\n */\nVALUE blah(VALUE klass, VALUE year) {\n}\n\nvoid Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n\n  rb_define_method(cDate, "blah", blah, 1);\n\n  rb_define_alias(cDate, "bleh", "blah");\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cDate']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['methods']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['method_list']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['2']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['methods']
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['bleh']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['methods']
                                    $recv: #NameExpr['last']
                                 ]
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['blah']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['methods']
                                       $recv: #NameExpr['last']
                                    ]
                                    $recv: #NameExpr['is_alias_for']
                                 ]
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['methods']
                                       $recv: #NameExpr['last']
                                    ]
                                    $recv: #NameExpr['is_alias_for']
                                 ]
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['methods']
                                    $recv: #NameExpr['last']
                                 ]
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_aliases_singleton']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * This should show up as a method with documentation\n */\nVALUE blah(VALUE klass, VALUE year) {\n}\n\nvoid Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n  sDate = rb_singleton_class(cDate);\n\n  rb_define_method(sDate, "blah", blah, 1);\n\n  /*\n   * This should show up as an alias\n   */\n  rb_define_alias(sDate, "bleh", "blah");\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cDate']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['methods']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['method_list']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['2']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['methods']
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['bleh']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['methods']
                                    $recv: #NameExpr['last']
                                 ]
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['methods']
                                    $recv: #NameExpr['last']
                                 ]
                                 $recv: #NameExpr['singleton']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['blah']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['methods']
                                       $recv: #NameExpr['last']
                                    ]
                                    $recv: #NameExpr['is_alias_for']
                                 ]
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['This should show up as an alias']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['methods']
                                       $recv: #NameExpr['last']
                                    ]
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_boot_class']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-class: Foo\n * this is the Foo boot class\n */\nVALUE cFoo = boot_defclass("Foo", rb_cObject);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo boot class']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Object']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['superclass']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_boot_class_nil']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-class: Foo\n * this is the Foo boot class\n */\nVALUE cFoo = boot_defclass("Foo", 0);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo boot class']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Nil['nil']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['superclass']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_aliases_missing_class']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['void Init_Blah(void) {\n  rb_define_alias(cDate, "b", "a");\n}\n']
                        ]
                        $statement: #MultipleAssign[
                           $left: #MultipleLeftHandSideExpression[
                              $item: #NameExpr['_']
                              $item: #NameExpr['err']
                           ]
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['verbose_capture_io']
                              $body: #Block[
                                 $body: #ApplyExpr[
                                    #Self['self']
                                    $recv: #NameExpr['refute']
                                    $param: #List[
                                       $expression: #ApplyExpr[
                                          #Self['self']
                                          $recv: #NameExpr['util_get_class']
                                          $param: #List[
                                             $expression: #NameExpr['content']
                                             $expression: #StringExpr['cDate']
                                          ]
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Enclosing class or module \\"cDate\\" for alias b a is not known\\n']
                              $expression: #NameExpr['err']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_class']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-class: Foo\n * this is the Foo class\n */\nVALUE cFoo = rb_define_class("Foo", rb_cObject);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo class']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_struct']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-class: Foo\n * this is the Foo class\n */\nVALUE cFoo = rb_struct_define_without_accessor(\n        "Foo", rb_cObject, foo_alloc,\n        "some", "various", "fields", NULL);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo class']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_class_under']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-class: Kernel::Foo\n * this is the Foo class under Kernel\n */\nVALUE cFoo = rb_define_class_under(rb_mKernel, "Foo", rb_cObject);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Kernel::Foo']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo class under Kernel']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_class_under_rb_path2class']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-class: Kernel::Foo\n * this is Kernel::Foo < A::B\n */\nVALUE cFoo = rb_define_class_under(rb_mKernel, "Foo", rb_path2class("A::B"));\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Kernel::Foo']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['A::B']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['superclass']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is Kernel::Foo < A::B']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_singleton']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['VALUE cFoo = rb_define_class("Foo", rb_cObject);\nVALUE cFooS = rb_singleton_class(cFoo);\n']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['util_get_class']
                           $param: #List[
                              $expression: #NameExpr['content']
                              $expression: #StringExpr['cFooS']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Foo']
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@parser']
                                    $recv: #NameExpr['singleton_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['cFooS']
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_module']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-module: Foo\n * this is the Foo module\n */\nVALUE mFoo = rb_define_module("Foo");\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['mFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo module']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_classes_module_under']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Document-module: Kernel::Foo\n * this is the Foo module under Kernel\n */\nVALUE mFoo = rb_define_module_under(rb_mKernel, "Foo");\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['mFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['this is the Foo module under Kernel']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_constants']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['#include <ruby.h>\n\nvoid Init_foo(){\n   VALUE cFoo = rb_define_class("Foo", rb_cObject);\n\n   /* 300: The highest possible score in bowling */\n   rb_define_const(cFoo, "PERFECT", INT2FIX(300));\n\n   /* Huzzah!: What you cheer when you roll a perfect game */\n   rb_define_const(cFoo, "CHEER", rb_str_new2("Huzzah!"));\n\n   /* TEST\\:TEST: Checking to see if escaped colon works */\n   rb_define_const(cFoo, "TEST", rb_str_new2("TEST:TEST"));\n\n   /* \\\\: The file separator on MS Windows */\n   rb_define_const(cFoo, "MSEPARATOR", rb_str_new2("\\\\"));\n\n   /* /: The file separator on Unix */\n   rb_define_const(cFoo, "SEPARATOR", rb_str_new2("/"));\n\n   /* C:\\\\Program Files\\\\Stuff: A directory on MS Windows */\n   rb_define_const(cFoo, "STUFF", rb_str_new2("C:\\\\Program Files\\\\Stuff"));\n\n   /* Default definition */\n   rb_define_const(cFoo, "NOSEMI", INT2FIX(99));\n\n   rb_define_const(cFoo, "NOCOMMENT", rb_str_new2("No comment"));\n\n   /*\n    * Multiline comment goes here because this comment spans multiple lines.\n    * Multiline comment goes here because this comment spans multiple lines.\n    */\n   rb_define_const(cFoo, "MULTILINE", INT2FIX(1));\n\n   /*\n    * 1: Multiline comment goes here because this comment spans multiple lines.\n    * Multiline comment goes here because this comment spans multiple lines.\n    */\n   rb_define_const(cFoo, "MULTILINE_VALUE", INT2FIX(1));\n\n   /* Multiline comment goes here because this comment spans multiple lines.\n    * Multiline comment goes here because this comment spans multiple lines.\n    */\n   rb_define_const(cFoo, "MULTILINE_NOT_EMPTY", INT2FIX(1));\n\n   /*\n    * Multiline comment goes here because this comment spans multiple lines.\n    * 1: However, the value extraction should only happen for the first line\n    */\n   rb_define_const(cFoo, "MULTILINE_COLON_ON_SECOND_LINE", INT2FIX(1));\n\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_classes']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_constants']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['@parser']
                                 $recv: #NameExpr['classes']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #NameExpr['klass']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['constants']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['constants']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #NotExpr[
                                 $expr: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['klass']
                                       $recv: #NameExpr['constants']
                                    ]
                                    $recv: #NameExpr['empty?']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['constants']
                                    $recv: #NameExpr['first']
                                 ]
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['constants']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['constants']
                              $recv: #NameExpr['map']
                              $body: #Block[
                                 $param: #NameExpr['c']
                                 $body: #Array[
                                    $index: #List[
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c']
                                          $recv: #NameExpr['name']
                                       ]
                                       $expression: #ApplyExpr[
                                          $recv: #NameExpr['c']
                                          $recv: #NameExpr['value']
                                       ]
                                       $expression: #ApplyExpr[
                                          $recv: #ApplyExpr[
                                             $recv: #NameExpr['c']
                                             $recv: #NameExpr['comment']
                                          ]
                                          $recv: #NameExpr['text']
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['PERFECT']
                                    $expression: #StringExpr['300']
                                    $expression: #StringExpr['The highest possible score in bowling   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['CHEER']
                                    $expression: #StringExpr['Huzzah!']
                                    $expression: #StringExpr['What you cheer when you roll a perfect game   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['TEST']
                                    $expression: #StringExpr['TEST:TEST']
                                    $expression: #StringExpr['Checking to see if escaped colon works   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['MSEPARATOR']
                                    $expression: #StringExpr['\\\\']
                                    $expression: #StringExpr['The file separator on MS Windows   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['SEPARATOR']
                                    $expression: #StringExpr['/']
                                    $expression: #StringExpr['The file separator on Unix   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['STUFF']
                                    $expression: #StringExpr['C:\\\\Program Files\\\\Stuff']
                                    $expression: #StringExpr['A directory on MS Windows   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['NOSEMI']
                                    $expression: #StringExpr['INT2FIX(99)']
                                    $expression: #StringExpr['Default definition   ']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['NOCOMMENT']
                                    $expression: #StringExpr['rb_str_new2("No comment")']
                                    $expression: #StringExpr['']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #HereDocument['Multiline comment goes here because this comment spans multiple lines.\nMultiline comment goes here because this comment spans multiple lines.\n']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['MULTILINE']
                                    $expression: #StringExpr['INT2FIX(1)']
                                    $expression: #NameExpr['comment']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['MULTILINE_VALUE']
                                    $expression: #StringExpr['1']
                                    $expression: #NameExpr['comment']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['MULTILINE_NOT_EMPTY']
                                    $expression: #StringExpr['INT2FIX(1)']
                                    $expression: #NameExpr['comment']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #HereDocument['Multiline comment goes here because this comment spans multiple lines.\n1: However, the value extraction should only happen for the first line\n']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Array[
                                 $index: #List[
                                    $expression: #StringExpr['MULTILINE_COLON_ON_SECOND_LINE']
                                    $expression: #StringExpr['INT2FIX(1)']
                                    $expression: #NameExpr['comment']
                                 ]
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['shift']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['empty?']
                              ]
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constants']
                                 $recv: #NameExpr['inspect']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_constants_curses']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['void Init_curses(){\n  mCurses = rb_define_module("Curses");\n\n  /*\n   * Document-const: Curses::COLOR_BLACK\n   *\n   * Value of the color black\n   */\n  rb_curses_define_const(COLOR_BLACK);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_modules']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_classes']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_constants']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['@parser']
                                 $recv: #NameExpr['classes']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['mCurses']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['constants']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['constants']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['refute_empty']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['constants']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['COLOR_BLACK']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['constants']
                                    $recv: #NameExpr['first']
                                 ]
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['UINT2NUM(COLOR_BLACK)']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['constants']
                                    $recv: #NameExpr['first']
                                 ]
                                 $recv: #NameExpr['value']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Value of the color black']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['constants']
                                       $recv: #NameExpr['first']
                                    ]
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_constants_file']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['void Init_File(void) {\n  /*  Document-const: LOCK_SH\n   *\n   *  Shared lock\n   */\n  rb_file_const("LOCK_SH", INT2FIX(LOCK_SH));\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['@parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_modules']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_classes']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['do_constants']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['@parser']
                                 $recv: #NameExpr['classes']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['rb_mFConst']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['constants']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['constants']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['refute_empty']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['constants']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['constant']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['constants']
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['LOCK_SH']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constant']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['INT2FIX(LOCK_SH)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['constant']
                                 $recv: #NameExpr['value']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Shared lock']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['constant']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_includes']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['Init_foo() {\n   VALUE cFoo = rb_define_class("Foo", rb_cObject);\n   VALUE mInc = rb_define_module("Inc");\n\n   rb_include_module(cFoo, mInc);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cFoo']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['incl']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['includes']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Inc']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['incl']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['incl']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['incl']
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_methods_in_c']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['VALUE blah(VALUE klass, VALUE year) {\n}\n\nvoid Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n\n  rb_define_method(cDate, "blah", blah, 1); /* in blah.c */\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #Nil['nil']
                        ]
                        $statement: #MultipleAssign[
                           $left: #MultipleLeftHandSideExpression[
                              $item: #NameExpr['_']
                              $item: #NameExpr['err']
                           ]
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['verbose_capture_io']
                              $body: #Block[
                                 $body: #AssignExpr[
                                    $left: #NameExpr['klass']
                                    $right: #ApplyExpr[
                                       #Self['self']
                                       $recv: #NameExpr['util_get_class']
                                       $param: #List[
                                          $expression: #NameExpr['content']
                                          $expression: #StringExpr['cDate']
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_match']
                           $param: #List[
                              $expression: #StringExpr[' blah.c ']
                              $expression: #NameExpr['err']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_methods_in_cpp']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['VALUE blah(VALUE klass, VALUE year) {\n}\n\nvoid Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n\n  rb_define_method(cDate, "blah", blah, 1); /* in blah.cpp */\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #Nil['nil']
                        ]
                        $statement: #MultipleAssign[
                           $left: #MultipleLeftHandSideExpression[
                              $item: #NameExpr['_']
                              $item: #NameExpr['err']
                           ]
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['verbose_capture_io']
                              $body: #Block[
                                 $body: #AssignExpr[
                                    $left: #NameExpr['klass']
                                    $right: #ApplyExpr[
                                       #Self['self']
                                       $recv: #NameExpr['util_get_class']
                                       $param: #List[
                                          $expression: #NameExpr['content']
                                          $expression: #StringExpr['cDate']
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_match']
                           $param: #List[
                              $expression: #StringExpr[' blah.cpp ']
                              $expression: #NameExpr['err']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_methods_in_y']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['VALUE blah(VALUE klass, VALUE year) {\n}\n\nvoid Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n\n  rb_define_method(cDate, "blah", blah, 1); /* in blah.y */\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #Nil['nil']
                        ]
                        $statement: #MultipleAssign[
                           $left: #MultipleLeftHandSideExpression[
                              $item: #NameExpr['_']
                              $item: #NameExpr['err']
                           ]
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['verbose_capture_io']
                              $body: #Block[
                                 $body: #AssignExpr[
                                    $left: #NameExpr['klass']
                                    $right: #ApplyExpr[
                                       #Self['self']
                                       $recv: #NameExpr['util_get_class']
                                       $param: #List[
                                          $expression: #NameExpr['content']
                                          $expression: #StringExpr['cDate']
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_match']
                           $param: #List[
                              $expression: #StringExpr[' blah.y ']
                              $expression: #NameExpr['err']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_methods_singleton_class']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['VALUE blah(VALUE klass, VALUE year) {\n}\n\nvoid Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n  sDate = rb_singleton_class(cDate);\n\n  rb_define_method(sDate, "blah", blah, 1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cDate']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['methods']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['klass']
                              $recv: #NameExpr['method_list']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['methods']
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['blah']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['methods']
                                    $recv: #NameExpr['first']
                                 ]
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['methods']
                                    $recv: #NameExpr['first']
                                 ]
                                 $recv: #NameExpr['singleton']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_missing']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass_a']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['add_class']
                              $param: #List[
                                 $expression: #Field[
                                    $recv: #NameExpr['RDoc']
                                    $name: #NameExpr['ClassModule']
                                 ]
                                 $expression: #StringExpr['A']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['classes']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['a']
                              ]
                           ]
                           $right: #NameExpr['klass_a']
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['c']
                              ]
                           ]
                           $right: #StringExpr['b']
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['b']
                              ]
                           ]
                           $right: #StringExpr['a']
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['d']
                              ]
                           ]
                           $right: #StringExpr['a']
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['d']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['d']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['D']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['a']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['c']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['c']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['C']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['b']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['b']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['b']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['B']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['a']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['parser']
                           $recv: #NameExpr['do_missing']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #ParcentNotation['%w[A A::B A::B::C A::D]']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['@store']
                                       $recv: #NameExpr['all_classes_and_modules']
                                    ]
                                    $recv: #NameExpr['map']
                                    $body: #Block[
                                       $param: #NameExpr['m']
                                       $body: #ApplyExpr[
                                          $recv: #NameExpr['m']
                                          $recv: #NameExpr['full_name']
                                       ]
                                    ]
                                 ]
                                 $recv: #NameExpr['sort']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_do_missing_cycle']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass_a']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['add_class']
                              $param: #List[
                                 $expression: #Field[
                                    $recv: #NameExpr['RDoc']
                                    $name: #NameExpr['ClassModule']
                                 ]
                                 $expression: #StringExpr['A']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['classes']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['a']
                              ]
                           ]
                           $right: #NameExpr['klass_a']
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['c']
                              ]
                           ]
                           $right: #StringExpr['b']
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['b']
                              ]
                           ]
                           $right: #StringExpr['a']
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['c']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['c']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['C']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['b']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['b']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['b']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['B']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['a']
                              ]
                           ]
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['y']
                              ]
                           ]
                           $right: #StringExpr['z']
                        ]
                        $statement: #LShiftExpr[
                           $left: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['enclosure_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['z']
                              ]
                           ]
                           $right: #StringExpr['y']
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['y']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['y']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['Y']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['z']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['missing_dependencies']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['z']
                              ]
                           ]
                           $right: #Array[
                              $index: #List[
                                 $expression: #StringExpr['z']
                                 $expression: #NameExpr['class']
                                 $expression: #StringExpr['Z']
                                 $expression: #StringExpr['Object']
                                 $expression: #StringExpr['y']
                              ]
                           ]
                        ]
                        $statement: #MultipleAssign[
                           $left: #MultipleLeftHandSideExpression[
                              $item: #NameExpr['_']
                              $item: #NameExpr['err']
                           ]
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['verbose_capture_io']
                              $body: #Block[
                                 $body: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['do_missing']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #AddExpr[
                              $left: #StringExpr['Unable to create class Y (y), class Z (z) ']
                              $right: #StringExpr['due to a cyclic class or module creation']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['err']
                                 $recv: #NameExpr['chomp']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #ParcentNotation['%w[A A::B A::B::C]']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['@store']
                                       $recv: #NameExpr['all_classes_and_modules']
                                    ]
                                    $recv: #NameExpr['map']
                                    $body: #Block[
                                       $param: #NameExpr['m']
                                       $body: #ApplyExpr[
                                          $recv: #NameExpr['m']
                                          $recv: #NameExpr['full_name']
                                       ]
                                    ]
                                 ]
                                 $recv: #NameExpr['sort']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_alias_comment']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_alias_comment']
                              $param: #List[
                                 $expression: #StringExpr['C']
                                 $expression: #StringExpr['[]']
                                 $expression: #StringExpr['index']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['/*\n * comment\n */\n\nrb_define_alias(C, "[]", "index");\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_alias_comment']
                              $param: #List[
                                 $expression: #StringExpr['C']
                                 $expression: #StringExpr['[]']
                                 $expression: #StringExpr['index']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/*\\n * comment\\n */\\n\\n']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_attr_comment_document_attr']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['/*\n * Document-attr: y\n * comment\n */\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_attr_comment']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['y']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/*\\n * \\n * comment\\n */']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_attr_comment_document_attr_oneline']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['/* Document-attr: y\n * comment\n */\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_attr_comment']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['y']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/* \\n * comment\\n */']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_attr_comment_document_attr_overlap']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['/* Document-attr: x\n * comment\n */\n\n/* Document-attr: y\n * comment\n */\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_attr_comment']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['y']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/* \\n * comment\\n */']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #LShiftExpr[
                           $left: #ApplyExpr[
                              $recv: #NameExpr['@options']
                              $recv: #NameExpr['rdoc_include']
                           ]
                           $right: #ApplyExpr[
                              $recv: #NameExpr['File']
                              $recv: #NameExpr['dirname']
                              $param: #List[
                                 $expression: #File['__FILE__']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * Comment 1\n */\nfoo = rb_define_class("MyClassName1", rb_cObject);\n\n/*\n * Comment 2\n */\nbar = rb_define_class("MyClassName2", rb_cObject);\n']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['util_get_class']
                           $param: #List[
                              $expression: #NameExpr['content']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Comment 1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #Indexer[
                                       $recv: #ApplyExpr[
                                          $recv: #NameExpr['@parser']
                                          $recv: #NameExpr['classes']
                                       ]
                                       $index: #List[
                                          $expression: #StringExpr['foo']
                                       ]
                                    ]
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Comment 2']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #Indexer[
                                       $recv: #ApplyExpr[
                                          $recv: #NameExpr['@parser']
                                          $recv: #NameExpr['classes']
                                       ]
                                       $index: #List[
                                          $expression: #StringExpr['bar']
                                       ]
                                    ]
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_init']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for class Foo\n */\nvoid\nInit_Foo(void) {\n  VALUE foo = rb_define_class("Foo", rb_cObject);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for class Foo']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_define_class']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for class Foo\n */\nVALUE foo = rb_define_class("Foo", rb_cObject);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for class Foo']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_define_class_Init_Foo']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for class Foo on Init\n */\nvoid\nInit_Foo(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for class Foo on Init']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_define_class_Init_Foo_no_void']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for class Foo on Init\n */\nvoid\nInit_Foo() {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for class Foo on Init']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_define_class_bogus_comment']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for other_function\n */\nvoid\nother_function() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_define_class_under']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for class Foo\n */\nVALUE foo = rb_define_class_under(rb_cObject, "Foo", rb_cObject);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for class Foo']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_class_comment_define_class_under_Init']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for class Foo on Init\n */\nvoid\nInit_Foo(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE foo = rb_define_class_under(rb_cObject, "Foo", rb_cObject);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for class Foo on rb_define_class']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_const_comment_rb_define']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * A comment\n */\nrb_define_const(cFoo, "CONST", value);\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_const_comment']
                              $param: #List[
                                 $expression: #StringExpr['const']
                                 $expression: #StringExpr['CONST']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/*\\n * A comment\\n */\\n']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_const_comment_document_const']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * Document-const: CONST\n *\n * A comment\n */\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_const_comment']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['CONST']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/*\\n *\\n * A comment\\n */']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_const_comment_document_const_full_name']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * Document-const: Foo::CONST\n *\n * A comment\n */\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['find_const_comment']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['CONST']
                                 $expression: #StringExpr['Foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['/*\\n *\\n * A comment\\n */']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for other_function\n */\nVALUE\nother_function() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_method(foo, "my_method", other_function, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['other_function']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['my_method']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for other_function']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['()']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['code']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['token_stream']
                                 ]
                                 $recv: #NameExpr['first']
                              ]
                              $recv: #NameExpr['text']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['VALUE\\nother_function() {\\n}']
                              $expression: #NameExpr['code']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_2']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/* Copyright (C) 2010  Sven Herzberg\n *\n * This file is free software; the author(s) gives unlimited\n * permission to copy and/or distribute it, with or without\n * modifications, as long as this notice is preserved.\n */\n\n#include <ruby.h>\n\nstatic VALUE\nwrap_initialize (VALUE  self)\n{\n  return self;\n}\n\n/* */\nstatic VALUE\nwrap_shift (VALUE self,\n            VALUE arg)\n{\n  return self;\n}\n\nvoid\ninit_gi_repository (void)\n{\n  VALUE mTest = rb_define_module ("Test");\n  VALUE cTest = rb_define_class_under (mTest, "Test", rb_cObject);\n\n  rb_define_method (cTest, "initialize", wrap_initialize, 0);\n  rb_define_method (cTest, "shift", wrap_shift, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cTest']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['2']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_cast']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for other_function\n */\nVALUE\nother_function() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_method(foo, "my_method", (METHOD)other_function, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['other_function']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['my_method']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for other_function']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['()']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['code']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['token_stream']
                                 ]
                                 $recv: #NameExpr['first']
                              ]
                              $recv: #NameExpr['text']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['VALUE\\nother_function() {\\n}']
                              $expression: #NameExpr['code']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_define']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['#define something something_else\n\n#define other_function rb_other_function\n\n/*\n * a comment for rb_other_function\n */\nVALUE\nrb_other_function() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_method(foo, "my_method", other_function, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['other_function']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['my_method']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for rb_other_function']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['()']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['118']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['offset']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['8']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['line']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['code']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['token_stream']
                                 ]
                                 $recv: #NameExpr['first']
                              ]
                              $recv: #NameExpr['text']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['VALUE\\nrb_other_function() {\\n}']
                              $expression: #NameExpr['code']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_define_comment']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for other_function\n */\n#define other_function rb_other_function\n\n/* */\nVALUE\nrb_other_function() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_method(foo, "my_method", other_function, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['other_function']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['my_method']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for other_function']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['()']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['39']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['offset']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['4']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['line']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['code']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['token_stream']
                                 ]
                                 $recv: #NameExpr['first']
                              ]
                              $recv: #NameExpr['text']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['#define other_function rb_other_function']
                              $expression: #NameExpr['code']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_document_method']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * Document-method: bar\n * Document-method: baz\n *\n * a comment for bar\n */\nVALUE\nbar() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_method(foo, "bar", bar, 0);\n    rb_define_method(foo, "baz", bar, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['2']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['methods']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['sort']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bar']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['methods']
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Foo#bar']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['bar']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for bar']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bar']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['baz']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['methods']
                              $recv: #NameExpr['last']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Foo#baz']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['baz']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for bar']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['baz']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_document_method_equals']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * Document-method: Zlib::GzipFile#mtime=\n *\n * A comment\n */\nstatic VALUE\nrb_gzfile_set_mtime(VALUE obj, VALUE mtime)\n{\n\nvoid\nInit_zlib() {\n    mZlib = rb_define_module("Zlib");\n    cGzipFile = rb_define_class_under(mZlib, "GzipFile", rb_cObject);\n    cGzipWriter = rb_define_class_under(mZlib, "GzipWriter", cGzipFile);\n    rb_define_method(cGzipWriter, "mtime=", rb_gzfile_set_mtime, 1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['cGzipWriter']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['methods']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['sort']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bar']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['methods']
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Zlib::GzipWriter#mtime=']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['bar']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['A comment']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bar']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_document_method_same']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['VALUE\ns_bar() {\n}\n\nVALUE\nbar() {\n}\n\n/*\n * Document-method: Foo::bar\n *\n * a comment for Foo::bar\n */\n\n/*\n * Document-method: Foo#bar\n *\n * a comment for Foo#bar\n */\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_singleton_method(foo, "bar", s_bar, 0);\n    rb_define_method(foo, "bar", bar, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['2']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['klass']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['methods']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['sort']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['s_bar']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['methods']
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Foo::bar']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['s_bar']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for Foo::bar']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['s_bar']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bar']
                           $right: #ApplyExpr[
                              $recv: #NameExpr['methods']
                              $recv: #NameExpr['last']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Foo#bar']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['bar']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for Foo#bar']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bar']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_body_macro']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*\n * a comment for other_function\n */\nDLL_LOCAL VALUE\nother_function() {\n}\n\nvoid\nInit_Foo(void) {\n    VALUE foo = rb_define_class("Foo", rb_cObject);\n\n    rb_define_method(foo, "my_method", other_function, 0);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['foo']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['other_function']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['my_method']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a comment for other_function']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['()']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['other_function']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['code']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['other_function']
                                    $recv: #NameExpr['token_stream']
                                 ]
                                 $recv: #NameExpr['first']
                              ]
                              $recv: #NameExpr['text']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['DLL_LOCAL VALUE\\nother_function() {\\n}']
                              $expression: #NameExpr['code']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_modifiers_call_seq']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Comment']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #HereDocument['call-seq:\n  commercial() -> Date <br />\n\nIf no arguments are given:\n\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['method_obj']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['AnyMethod']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['blah']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['find_modifiers']
                           $param: #List[
                              $expression: #NameExpr['comment']
                              $expression: #NameExpr['method_obj']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #HereDocument['commercial() -> Date <br />\n\n']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['method_obj']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_modifiers_nodoc']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Comment']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #HereDocument['/* :nodoc:\n *\n * Blah\n */\n\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['method_obj']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['AnyMethod']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['blah']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['find_modifiers']
                           $param: #List[
                              $expression: #NameExpr['comment']
                              $expression: #NameExpr['method_obj']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #Nil['nil']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['method_obj']
                                 $recv: #NameExpr['document_self']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_find_modifiers_yields']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Comment']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #HereDocument['/* :yields: a, b\n *\n * Blah\n */\n\n']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['method_obj']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['AnyMethod']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #Nil['nil']
                                 $expression: #StringExpr['blah']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['find_modifiers']
                           $param: #List[
                              $expression: #NameExpr['comment']
                              $expression: #NameExpr['method_obj']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['a, b']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['method_obj']
                                 $recv: #NameExpr['block_params']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['\\n\\nBlah']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_method_args_minus_1']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #StringExpr['Document-method: Object#m\\n blah */']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Field[
                              $base: #NameExpr['parser']
                              $name: #NameExpr['content']
                           ]
                           $right: #HereDocument['VALUE\nrb_other(VALUE obj) {\n  rb_funcall(obj, rb_intern("other"), 0);\n  return rb_str_new2("blah, blah, blah");\n}\n\nVALUE\nrb_m(int argc, VALUE *argv, VALUE obj) {\n  VALUE o1, o2;\n  rb_scan_args(argc, argv, "1", &o1, &o2);\n}\n']
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['handle_method']
                           $param: #List[
                              $expression: #StringExpr['method']
                              $expression: #StringExpr['rb_cObject']
                              $expression: #StringExpr['m']
                              $expression: #StringExpr['rb_m']
                              $expression: #MinusExpr[
                                 $expr: #IntExpr['1']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['m']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@top_level']
                                    $recv: #NameExpr['find_module_named']
                                    $param: #List[
                                       $expression: #StringExpr['Object']
                                    ]
                                 ]
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['m']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['m']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['m']
                                 $recv: #NameExpr['file']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['115']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['m']
                                 $recv: #NameExpr['offset']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['7']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['m']
                                 $recv: #NameExpr['line']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['m']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_method_args_0']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #StringExpr['Document-method: BasicObject#==\\n blah */']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['handle_method']
                           $param: #List[
                              $expression: #StringExpr['method']
                              $expression: #StringExpr['rb_cBasicObject']
                              $expression: #StringExpr['==']
                              $expression: #StringExpr['rb_obj_equal']
                              $expression: #IntExpr['0']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bo']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['find_module_named']
                              $param: #List[
                                 $expression: #StringExpr['BasicObject']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bo']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['equals2']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['bo']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['()']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['equals2']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_method_args_1']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #StringExpr['Document-method: BasicObject#==\\n blah */']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['handle_method']
                           $param: #List[
                              $expression: #StringExpr['method']
                              $expression: #StringExpr['rb_cBasicObject']
                              $expression: #StringExpr['==']
                              $expression: #StringExpr['rb_obj_equal']
                              $expression: #IntExpr['1']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bo']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['find_module_named']
                              $param: #List[
                                 $expression: #StringExpr['BasicObject']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bo']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['equals2']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['bo']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['equals2']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_method_args_2']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #StringExpr['Document-method: BasicObject#==\\n blah */']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['handle_method']
                           $param: #List[
                              $expression: #StringExpr['method']
                              $expression: #StringExpr['rb_cBasicObject']
                              $expression: #StringExpr['==']
                              $expression: #StringExpr['rb_obj_equal']
                              $expression: #IntExpr['2']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bo']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['find_module_named']
                              $param: #List[
                                 $expression: #StringExpr['BasicObject']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bo']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['equals2']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['bo']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['equals2']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_method_args_minus_2']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #StringExpr['Document-method: BasicObject#==\\n blah */']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['handle_method']
                           $param: #List[
                              $expression: #StringExpr['method']
                              $expression: #StringExpr['rb_cBasicObject']
                              $expression: #StringExpr['==']
                              $expression: #StringExpr['rb_obj_equal']
                              $expression: #MinusExpr[
                                 $expr: #IntExpr['2']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bo']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['find_module_named']
                              $param: #List[
                                 $expression: #StringExpr['BasicObject']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bo']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['equals2']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['bo']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(*args)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['equals2']
                                 $recv: #NameExpr['params']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_method_initialize']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #StringExpr['Document-method: BasicObject::new\\n blah */']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['parser']
                           $recv: #NameExpr['handle_method']
                           $param: #List[
                              $expression: #StringExpr['private_method']
                              $expression: #StringExpr['rb_cBasicObject']
                              $expression: #StringExpr['initialize']
                              $expression: #StringExpr['rb_obj_dummy']
                              $expression: #MinusExpr[
                                 $expr: #IntExpr['1']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['bo']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['find_module_named']
                              $param: #List[
                                 $expression: #StringExpr['BasicObject']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #IntExpr['1']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['bo']
                                    $recv: #NameExpr['method_list']
                                 ]
                                 $recv: #NameExpr['length']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['new']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['bo']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['new']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['new']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['public']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['new']
                                 $recv: #NameExpr['visibility']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_handle_singleton']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['void Init_Blah(void) {\n  cDate = rb_define_class("Date", rb_cObject);\n  sDate = rb_singleton_class(cDate);\n}\n']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['parser']
                           $recv: #NameExpr['scan']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Date']
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['known_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['sDate']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Date']
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['singleton_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['sDate']
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_look_for_directives_in']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['comment']
                           $right: #ApplyExpr[
                              $base: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['Comment']
                              ]
                              $recv: #NameExpr['new']
                              $param: #List[
                                 $expression: #StringExpr['# :other: not_handled\\n']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['parser']
                           $recv: #NameExpr['look_for_directives_in']
                           $param: #List[
                              $expression: #NameExpr['@top_level']
                              $expression: #NameExpr['comment']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['# :other: not_handled\\n']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['comment']
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['not_handled']
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@top_level']
                                    $recv: #NameExpr['metadata']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['other']
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_load_variable_map']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['some_ext']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['add_class']
                              $param: #List[
                                 $expression: #Field[
                                    $recv: #NameExpr['RDoc']
                                    $name: #NameExpr['NormalClass']
                                 ]
                                 $expression: #StringExpr['SomeExt']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['@top_level']
                           $recv: #NameExpr['add_class']
                           $param: #List[
                              $expression: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['NormalClass']
                              ]
                              $expression: #StringExpr['OtherExt']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@store']
                                    $recv: #NameExpr['cache']
                                 ]
                                 $index: #List[
                                    $expression: #NameExpr['c_class_variables']
                                 ]
                              ]
                              $index: #List[
                                 $expression: #NameExpr['@fn']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExt']
                                 $value: #StringExpr['SomeExt']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@store']
                                    $recv: #NameExpr['cache']
                                 ]
                                 $index: #List[
                                    $expression: #NameExpr['c_class_variables']
                                 ]
                              ]
                              $index: #List[
                                 $expression: #StringExpr['other.c']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cOtherExt']
                                 $value: #StringExpr['OtherExt']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['map']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['load_variable_map']
                              $param: #List[
                                 $expression: #NameExpr['c_class_variables']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExt']
                                 $value: #NameExpr['some_ext']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #NameExpr['map']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['SomeExt']
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['known_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['cSomeExt']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_nil']
                           $param: #List[
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['known_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['cOtherExt']
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_load_variable_map_empty']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['map']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['load_variable_map']
                              $param: #List[
                                 $expression: #NameExpr['c_class_variables']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_empty']
                           $param: #List[
                              $expression: #NameExpr['map']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_load_variable_map_legacy']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #ApplyExpr[
                                 $recv: #NameExpr['@store']
                                 $recv: #NameExpr['cache']
                              ]
                              $index: #List[
                                 $expression: #NameExpr['c_class_variables']
                              ]
                           ]
                           $right: #Nil['nil']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['map']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['load_variable_map']
                              $param: #List[
                                 $expression: #NameExpr['c_class_variables']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_empty']
                           $param: #List[
                              $expression: #NameExpr['map']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_load_variable_map_singleton']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #ApplyExpr[
                           $base: #NameExpr['@top_level']
                           $recv: #NameExpr['add_class']
                           $param: #List[
                              $expression: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['NormalClass']
                              ]
                              $expression: #StringExpr['SomeExt']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $base: #NameExpr['@top_level']
                           $recv: #NameExpr['add_class']
                           $param: #List[
                              $expression: #Field[
                                 $recv: #NameExpr['RDoc']
                                 $name: #NameExpr['NormalClass']
                              ]
                              $expression: #StringExpr['OtherExt']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@store']
                                    $recv: #NameExpr['cache']
                                 ]
                                 $index: #List[
                                    $expression: #NameExpr['c_singleton_class_variables']
                                 ]
                              ]
                              $index: #List[
                                 $expression: #NameExpr['@fn']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExt']
                                 $value: #StringExpr['SomeExt']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@store']
                                    $recv: #NameExpr['cache']
                                 ]
                                 $index: #List[
                                    $expression: #NameExpr['c_singleton_class_variables']
                                 ]
                              ]
                              $index: #List[
                                 $expression: #StringExpr['other.c']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cOtherExt']
                                 $value: #StringExpr['OtherExt']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['map']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['load_variable_map']
                              $param: #List[
                                 $expression: #NameExpr['c_singleton_class_variables']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cSomeExt']
                                 $value: #StringExpr['SomeExt']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #NameExpr['map']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['SomeExt']
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['known_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['cSomeExt']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_nil']
                           $param: #List[
                              $expression: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['parser']
                                    $recv: #NameExpr['known_classes']
                                 ]
                                 $index: #List[
                                    $expression: #StringExpr['cOtherExt']
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_load_variable_map_trim']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['a']
                           $right: #ApplyExpr[
                              $base: #NameExpr['@top_level']
                              $recv: #NameExpr['add_class']
                              $param: #List[
                                 $expression: #Field[
                                    $recv: #NameExpr['RDoc']
                                    $name: #NameExpr['NormalClass']
                                 ]
                                 $expression: #StringExpr['A']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #Indexer[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['@store']
                                    $recv: #NameExpr['cache']
                                 ]
                                 $index: #List[
                                    $expression: #NameExpr['c_class_variables']
                                 ]
                              ]
                              $index: #List[
                                 $expression: #NameExpr['@fn']
                              ]
                           ]
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cA']
                                 $value: #StringExpr['A']
                              ]
                              $hash: #Hash[
                                 $key: #StringExpr['cB']
                                 $value: #StringExpr['B']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['map']
                           $right: #ApplyExpr[
                              $base: #NameExpr['parser']
                              $recv: #NameExpr['load_variable_map']
                              $param: #List[
                                 $expression: #NameExpr['c_class_variables']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #StringExpr['cA']
                                 $value: #NameExpr['a']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #NameExpr['map']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_define_method']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*Method Comment! */\nstatic VALUE\nrb_io_s_read(argc, argv, io)\n    int argc;\n    VALUE *argv;\n    VALUE io;\n{\n}\n\nvoid\nInit_IO(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE rb_cIO = rb_define_class("IO", rb_cObject);\n    rb_define_singleton_method(rb_cIO, "read", rb_io_s_read, -1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['rb_cIO']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['read_method']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Method Comment!   ']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['read_method']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['rb_io_s_read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['c_function']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['singleton']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_define_method_with_prototype']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['static VALUE rb_io_s_read(int, VALUE*, VALUE);\n\n/* Method Comment! */\nstatic VALUE\nrb_io_s_read(argc, argv, io)\n    int argc;\n    VALUE *argv;\n    VALUE io;\n{\n}\n\nvoid\nInit_IO(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE rb_cIO = rb_define_class("IO", rb_cObject);\n    rb_define_singleton_method(rb_cIO, "read", rb_io_s_read, -1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['rb_cIO']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['read_method']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Method Comment!   ']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['read_method']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['rb_io_s_read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['c_function']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['singleton']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_define_method_private']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*Method Comment! */\nstatic VALUE\nrb_io_s_read(argc, argv, io)\n    int argc;\n    VALUE *argv;\n    VALUE io;\n{\n}\n\nvoid\nInit_IO(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE rb_cIO = rb_define_class("IO", rb_cObject);\n    rb_define_private_method(rb_cIO, "read", rb_io_s_read, -1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['rb_cIO']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['read_method']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['IO#read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['full_name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['private']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['visibility']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Method Comment!   ']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['read_method']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_define_method_private_singleton']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*Method Comment! */\nstatic VALUE\nrb_io_s_read(argc, argv, io)\n    int argc;\n    VALUE *argv;\n    VALUE io;\n{\n}\n\nvoid\nInit_IO(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE rb_cIO = rb_define_class("IO", rb_cObject);\n    VALUE rb_cIO_s = rb_singleton_class(rb_cIO);\n    rb_define_private_method(rb_cIO_s, "read", rb_io_s_read, -1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['rb_cIO']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['read_method']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Method Comment!   ']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['read_method']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['private']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['visibility']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['singleton']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_define_method_singleton']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['content']
                           $right: #HereDocument['/*Method Comment! */\nstatic VALUE\nrb_io_s_read(argc, argv, io)\n    int argc;\n    VALUE *argv;\n    VALUE io;\n{\n}\n\nvoid\nInit_IO(void) {\n    /*\n     * a comment for class Foo on rb_define_class\n     */\n    VALUE rb_cIO = rb_define_class("IO", rb_cObject);\n    VALUE rb_cIO_s = rb_singleton_class(rb_cIO);\n    rb_define_method(rb_cIO_s, "read", rb_io_s_read, -1);\n}\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['klass']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_get_class']
                              $param: #List[
                                 $expression: #NameExpr['content']
                                 $expression: #StringExpr['rb_cIO']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['read_method']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['klass']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['first']
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['read']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['name']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['Method Comment!   ']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #NameExpr['read_method']
                                    $recv: #NameExpr['comment']
                                 ]
                                 $recv: #NameExpr['text']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert']
                           $param: #List[
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['read_method']
                                 $recv: #NameExpr['singleton']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_rb_scan_args']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #NameExpr['util_parser']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "1",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "2",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1 = v1)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "01",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1 = v1, p2 = v2)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "02",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = v2)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "11",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, *args)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "1*",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = {})']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "1:",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, &block)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "1&",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "101",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = v2, p3)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "111",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, *args, p3)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "1*1",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = v2, *args)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "11*",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = v2, p3 = {})']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "11:",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = v2, &block)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "11&",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1, p2 = v2, *args, p4, p5 = {}, &block)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "11*1:&",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(*args)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "*",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1 = {})']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, ":",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(&block)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "&",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(*args, p2 = {})']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "*:",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(p1 = {}, &block)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, ":&",)']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['(*args, p2 = {}, &block)']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['parser']
                                 $recv: #NameExpr['rb_scan_args']
                                 $param: #List[
                                    $expression: #StringExpr['rb_scan_args(a, b, "*:&",)']
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_scan']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['void Init(void) {\n    mM = rb_define_module("M");\n    cC = rb_define_class("C", rb_cObject);\n    sC = rb_singleton_class(cC);\n}\n']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['parser']
                           $recv: #NameExpr['scan']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #NameExpr['@fn']
                                 $value: #List[
                                    $hash: #Hash[
                                       $key: #StringExpr['mM']
                                       $value: #StringExpr['M']
                                    ]
                                    $hash: #Hash[
                                       $key: #StringExpr['cC']
                                       $value: #StringExpr['C']
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['@store']
                                 $recv: #NameExpr['c_class_variables']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['expected']
                           $right: #List[
                              $hash: #Hash[
                                 $key: #NameExpr['@fn']
                                 $value: #List[
                                    $hash: #Hash[
                                       $key: #StringExpr['sC']
                                       $value: #StringExpr['C']
                                    ]
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['@store']
                                 $recv: #NameExpr['c_singleton_class_variables']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_scan_method_copy']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['/*\n *  call-seq:\n *    pathname.to_s    -> string\n *    pathname.to_path -> string\n *\n *  Return the path as a String.\n *\n *  to_path is implemented so Pathname objects are usable with File.open, etc.\n */\nstatic VALUE\npath_to_s(VALUE self) { }\n\n/*\n *  call-seq:\n *     str[index]               -> new_str or nil\n *     str[start, length]       -> new_str or nil\n *     str.slice(index)         -> new_str or nil\n *     str.slice(start, length) -> new_str or nil\n */\nstatic VALUE\npath_aref_m(int argc, VALUE *argv, VALUE str) { }\n\n/*\n *  call-seq:\n *     string <=> other_string   -> -1, 0, +1 or nil\n */\nstatic VALUE\npath_cmp_m(VALUE str1, VALUE str2) { }\n\n/*\n *  call-seq:\n *     str == obj    -> true or false\n *     str === obj   -> true or false\n */\nVALUE\nrb_str_equal(VALUE str1, VALUE str2) { }\n\nInit_pathname()\n{\n    rb_cPathname = rb_define_class("Pathname", rb_cObject);\n\n    rb_define_method(rb_cPathname, "to_s",    path_to_s, 0);\n    rb_define_method(rb_cPathname, "to_path", path_to_s, 0);\n    rb_define_method(rb_cPathname, "[]",      path_aref_m, -1);\n    rb_define_method(rb_cPathname, "slice",   path_aref_m, -1);\n    rb_define_method(rb_cPathname, "<=>",     path_cmp_m, 1);\n    rb_define_method(rb_cPathname, "==",      rb_str_equal), 2);\n    rb_define_method(rb_cPathname, "===",     rb_str_equal), 2);\n}\n']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['parser']
                           $recv: #NameExpr['scan']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['pathname']
                           $right: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['@store']
                                 $recv: #NameExpr['classes_hash']
                              ]
                              $index: #List[
                                 $expression: #StringExpr['Pathname']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['to_path']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['to_path']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['pathname.to_path -> string']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['to_path']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['to_s']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['to_s']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['pathname.to_s    -> string']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['to_s']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['index_expected']
                           $right: #HereDocument['str[index]               -> new_str or nil\nstr[start, length]       -> new_str or nil\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['index']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['[]']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['index_expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['index']
                                 $recv: #NameExpr['call_seq']
                              ]
                              $expression: #StringExpr['[]']
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['slice_expected']
                           $right: #HereDocument['str.slice(index)         -> new_str or nil\nstr.slice(start, length) -> new_str or nil\n']
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['slice']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['slice']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #NameExpr['slice_expected']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['slice']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['spaceship']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['<=>']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #StringExpr['string <=> other_string   -> -1, 0, +1 or nil']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['spaceship']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['equals2']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['==']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_match']
                           $param: #List[
                              $expression: #StringExpr['str == obj']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['equals2']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                        $statement: #AssignExpr[
                           $left: #NameExpr['equals3']
                           $right: #ApplyExpr[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['pathname']
                                 $recv: #NameExpr['method_list']
                              ]
                              $recv: #NameExpr['find']
                              $body: #Block[
                                 $param: #NameExpr['m']
                                 $body: #EqExpr[
                                    $left: #ApplyExpr[
                                       $recv: #NameExpr['m']
                                       $recv: #NameExpr['name']
                                    ]
                                    $right: #StringExpr['===']
                                 ]
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_match']
                           $param: #List[
                              $expression: #StringExpr['str === obj']
                              $expression: #ApplyExpr[
                                 $recv: #NameExpr['equals3']
                                 $recv: #NameExpr['call_seq']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['test_scan_order_dependent']
                  $param: #List['']
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #HereDocument['void a(void) {\n    mA = rb_define_module("A");\n}\n\nvoid b(void) {\n    cB = rb_define_class_under(mA, "B", rb_cObject);\n}\n\nvoid c(void) {\n    mC = rb_define_module_under(cB, "C");\n}\n\nvoid d(void) {\n    mD = rb_define_class_under(mC, "D");\n}\n']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['parser']
                           $recv: #NameExpr['scan']
                        ]
                        $statement: #ApplyExpr[
                           #Self['self']
                           $recv: #NameExpr['assert_equal']
                           $param: #List[
                              $expression: #ParcentNotation['%w[A A::B A::B::C]']
                              $expression: #ApplyExpr[
                                 $recv: #ApplyExpr[
                                    $recv: #ApplyExpr[
                                       $recv: #NameExpr['@store']
                                       $recv: #NameExpr['all_classes_and_modules']
                                    ]
                                    $recv: #NameExpr['map']
                                    $body: #Block[
                                       $param: #NameExpr['m']
                                       $body: #ApplyExpr[
                                          $recv: #NameExpr['m']
                                          $recv: #NameExpr['full_name']
                                       ]
                                    ]
                                 ]
                                 $recv: #NameExpr['sort']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['util_get_class']
                  $param: #List[
                     $param: #Param[
                        $param: #NameExpr['content']
                     ]
                     $param: #OptionalParam[
                        $name: #NameExpr['name']
                        $default: #Nil['nil']
                     ]
                  ]
                  $body: #BlockExpr[
                     $main: #List[
                        $statement: #AssignExpr[
                           $left: #NameExpr['@parser']
                           $right: #ApplyExpr[
                              #Self['self']
                              $recv: #NameExpr['util_parser']
                              $param: #List[
                                 $expression: #NameExpr['content']
                              ]
                           ]
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['@parser']
                           $recv: #NameExpr['scan']
                        ]
                        $statement: #IfExpr[
                           $then: #Indexer[
                              $recv: #ApplyExpr[
                                 $recv: #NameExpr['@parser']
                                 $recv: #NameExpr['classes']
                              ]
                              $index: #List[
                                 $expression: #NameExpr['name']
                              ]
                           ]
                           $cond: #NameExpr['name']
                        ]
                     ]
                  ]
               ]
               $statement: #FuncDecl[
                  $name: #NameExpr['util_parser']
                  $param: #List[
                     $param: #OptionalParam[
                        $name: #NameExpr['content']
                        $default: #StringExpr['']
                     ]
                  ]
                  $body: #BlockExpr[
                     $main: #ApplyExpr[
                        $base: #Field[
                           $recv: #Field[
                              $recv: #NameExpr['RDoc']
                              $name: #NameExpr['Parser']
                           ]
                           $name: #NameExpr['C']
                        ]
                        $recv: #NameExpr['new']
                        $param: #List[
                           $expression: #NameExpr['@top_level']
                           $expression: #NameExpr['@fn']
                           $expression: #NameExpr['content']
                           $expression: #NameExpr['@options']
                           $expression: #NameExpr['@stats']
                        ]
                     ]
                  ]
               ]
            ]
         ]
      ]
   ]
   #Comsumed['comsumed']
]
