#Source[
   #List[
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['assert_equal']
         $param: #List[
            $expression: #StringExpr['A']
            $expression: #ParcentNotation['%q{\n  class A\n    @@a = \'A\'\n    def a=(x)\n      @@a = x\n    end\n    def a\n      @@a\n    end\n  end\n\n  B = A.dup\n  B.new.a = \'B\'\n  A.new.a\n}']
            $expression: #StringExpr['[ruby-core:17019]']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['assert_equal']
         $param: #List[
            $expression: #StringExpr['ok']
            $expression: #ParcentNotation['%q{\n  def m\n    lambda{\n      proc{\n        return :ng1\n      }\n    }.call.call\n    :ng2\n  end\n\n  begin\n    m()\n  rescue LocalJumpError\n    :ok\n  end\n}']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['assert_normal_exit']
         $param: #List[
            $expression: #ParcentNotation['%q{\n  r = Range.allocate\n  def r.<=>(o) true end\n  r.instance_eval { initialize r, r }\n  r.inspect\n}']
         ]
      ]
   ]
   #Comsumed['comsumed']
]
