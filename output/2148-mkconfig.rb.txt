#Source[
   #List[
      $statement: #LOrAssign[
         $left: #NameExpr['$install_name']
         $right: #Nil['nil']
      ]
      $statement: #LOrAssign[
         $left: #NameExpr['$so_name']
         $right: #Nil['nil']
      ]
      $statement: #LOrAssign[
         $left: #NameExpr['$cross_compiling']
         $right: #Nil['nil']
      ]
      $statement: #LOrAssign[
         $left: #NameExpr['$unicode_version']
         $right: #Nil['nil']
      ]
      $statement: #OrExpr[
         $left: #AssignExpr[
            $left: #NameExpr['arch']
            $right: #NameExpr['$arch']
         ]
         $right: #ApplyExpr[
            #Self['self']
            $recv: #NameExpr['raise']
            $param: #List[
               $expression: #StringExpr['missing -arch']
            ]
         ]
      ]
      $statement: #OrExpr[
         $left: #AssignExpr[
            $left: #NameExpr['version']
            $right: #NameExpr['$version']
         ]
         $right: #ApplyExpr[
            #Self['self']
            $recv: #NameExpr['raise']
            $param: #List[
               $expression: #StringExpr['missing -version']
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['srcdir']
         $right: #ApplyExpr[
            $recv: #NameExpr['File']
            $recv: #NameExpr['expand_path']
            $param: #List[
               $expression: #StringExpr['../..']
               $expression: #File['__FILE__']
            ]
         ]
      ]
      $statement: #Unless[
         $then: #ApplyExpr[
            $base: #BuiltInVariable['$:']
            $recv: #NameExpr['replace']
            $param: #List[
               $expression: #Array[
                  $index: #List[
                     $expression: #AddExpr[
                        $left: #NameExpr['srcdir']
                        $right: #StringExpr['/lib']
                     ]
                  ]
               ]
            ]
         ]
         $cond: #EqExpr[
            $left: #NameExpr['$cross_compiling']
            $right: #StringExpr['yes']
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #BuiltInVariable['$:']
         $recv: #NameExpr['unshift']
         $param: #List[
            $expression: #StringExpr['.']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['require']
         $param: #List[
            $expression: #StringExpr['fileutils']
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['mkconfig']
         $right: #ApplyExpr[
            $recv: #NameExpr['File']
            $recv: #NameExpr['basename']
            $param: #List[
               $expression: #BuiltInVariable['$0']
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['fast']
         $right: #List[
            $hash: #Hash[
               $key: #StringExpr['prefix']
               $value: #TrueExpr['true']
            ]
            $hash: #Hash[
               $key: #StringExpr['ruby_install_name']
               $value: #TrueExpr['true']
            ]
            $hash: #Hash[
               $key: #StringExpr['INSTALL']
               $value: #TrueExpr['true']
            ]
            $hash: #Hash[
               $key: #StringExpr['EXEEXT']
               $value: #TrueExpr['true']
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['win32']
         $right: #Match[
            $left: #Regex['/mswin/']
            $right: #NameExpr['arch']
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['universal']
         $right: #Match[
            $left: #Regex['/universal.*darwin/']
            $right: #NameExpr['arch']
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['v_fast']
         $right: #Array['[]']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['v_others']
         $right: #Array['[]']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['vars']
         $right: #List['{}']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['continued_name']
         $right: #Nil['nil']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['continued_line']
         $right: #Nil['nil']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['install_name']
         $right: #Nil['nil']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['so_name']
         $right: #Nil['nil']
      ]
      $statement: #ApplyExpr[
         $base: #NameExpr['File']
         $recv: #NameExpr['foreach']
         $param: #List[
            $expression: #StringExpr['config.status']
         ]
         $body: #Block[
            $param: #NameExpr['line']
            $body: #List[
               $statement: #IfExpr[
                  $then: #Next['next']
                  $cond: #Match[
                     $left: #Regex['/^#/']
                     $right: #NameExpr['line']
                  ]
               ]
               $statement: #AssignExpr[
                  $left: #NameExpr['name']
                  $right: #Nil['nil']
               ]
               $statement: #Case[
                  $cond: #NameExpr['line']
                  $body: #List[
                     $when: #When[
                        $cond: #List[
                           $expression: #Regex['/^s([%,])@(\\w+)@\\1(?:\\|\\#_!!_\\#\\|)?(.*)\\1/']
                        ]
                        $then: #List[
                           $statement: #AssignExpr[
                              $left: #NameExpr['name']
                              $right: #MatchedRegex['$2']
                           ]
                           $statement: #AssignExpr[
                              $left: #NameExpr['val']
                              $right: #ApplyExpr[
                                 $recv: #MatchedRegex['$3']
                                 $recv: #NameExpr['gsub']
                                 $param: #List[
                                    $expression: #Regex['/\\\\(?=,)/']
                                    $expression: #StringExpr['']
                                 ]
                              ]
                           ]
                        ]
                     ]
                     $when: #When[
                        $cond: #List[
                           $expression: #Regex['/^S\\["(\\w+)"\\]\\s*=\\s*"(.*)"\\s*(\\\\)?$/']
                        ]
                        $then: #List[
                           $statement: #AssignExpr[
                              $left: #NameExpr['name']
                              $right: #MatchedRegex['$1']
                           ]
                           $statement: #AssignExpr[
                              $left: #NameExpr['val']
                              $right: #MatchedRegex['$2']
                           ]
                           $statement: #IfExpr[
                              $cond: #MatchedRegex['$3']
                              $then: #List[
                                 $statement: #AssignExpr[
                                    $left: #NameExpr['continued_line']
                                    $right: #Array[
                                       $index: #List[
                                          $expression: #NameExpr['val']
                                       ]
                                    ]
                                 ]
                                 $statement: #AssignExpr[
                                    $left: #NameExpr['continued_name']
                                    $right: #NameExpr['name']
                                 ]
                                 $statement: #Next['next']
                              ]
                           ]
                        ]
                     ]
                     $when: #When[
                        $cond: #List[
                           $expression: #Regex['/^"(.*)"\\s*(\\\\)?$/']
                        ]
                        $then: #List[
                           $statement: #IfExpr[
                              $then: #Next['next']
                              $cond: #NotExpr[
                                 $expr: #NameExpr['continued_line']
                              ]
                           ]
                           $statement: #LShiftExpr[
                              $left: #NameExpr['continued_line']
                              $right: #MatchedRegex['$1']
                           ]
                           $statement: #IfExpr[
                              $then: #Next['next']
                              $cond: #MatchedRegex['$2']
                           ]
                           $statement: #ApplyExpr[
                              $recv: #NameExpr['continued_line']
                              $recv: #NameExpr['each']
                              $body: #Block[
                                 $param: #NameExpr['s']
                                 $body: #ApplyExpr[
                                    $recv: #NameExpr['s']
                                    $recv: #NameExpr['sub!']
                                    $param: #List[
                                       $expression: #Regex['/\\\\n\\z/']
                                       $expression: #StringExpr['\\n']
                                    ]
                                 ]
                              ]
                           ]
                           $statement: #AssignExpr[
                              $left: #NameExpr['val']
                              $right: #ApplyExpr[
                                 $recv: #NameExpr['continued_line']
                                 $recv: #NameExpr['join']
                              ]
                           ]
                           $statement: #AssignExpr[
                              $left: #NameExpr['name']
                              $right: #NameExpr['continued_name']
                           ]
                           $statement: #AssignExpr[
                              $left: #NameExpr['continued_line']
                              $right: #Nil['nil']
                           ]
                        ]
                     ]
                     $when: #When[
                        $cond: #List[
                           $expression: #Regex['/^(?:ac_given_)?INSTALL=(.*)/']
                        ]
                        $then: #LShiftExpr[
                           $left: #NameExpr['v_fast']
                           $right: #AddExpr[
                              $left: #AddExpr[
                                 $left: #StringExpr['  CONFIG[\\"INSTALL\\"] = ']
                                 $right: #MatchedRegex['$1']
                              ]
                              $right: #StringExpr['\\n']
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #IfExpr[
                  $cond: #NameExpr['name']
                  $then: #List[
                     $statement: #Case[
                        $cond: #NameExpr['name']
                        $body: #List[
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^(?:ac_.*|configure_input|(?:top_)?srcdir|\\w+OBJS)$/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^(?:X|(?:MINI|RUN|(?:HAVE_)?BASE|BOOTSTRAP|BTEST)RUBY(?:_COMMAND)?$)/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^INSTALLDOC|TARGET$/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^DTRACE/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^(?:MAJOR|MINOR|TEENY)$/']
                              ]
                              $then: #List[
                                 $statement: #AssignExpr[
                                    $left: #Indexer[
                                       $base: #NameExpr['vars']
                                       $index: #List[
                                          $expression: #NameExpr['name']
                                       ]
                                    ]
                                    $right: #NameExpr['val']
                                 ]
                                 $statement: #Next['next']
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^LIBRUBY_D?LD/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^RUBY_INSTALL_NAME$/']
                              ]
                              $then: #IfExpr[
                                 $then: #Next[
                                    $expr: #List[
                                       $expression: #AssignExpr[
                                          $left: #Indexer[
                                             $base: #NameExpr['vars']
                                             $index: #List[
                                                $expression: #NameExpr['name']
                                             ]
                                          ]
                                          $right: #ApplyExpr[
                                             $recv: #AssignExpr[
                                                $left: #NameExpr['install_name']
                                                $right: #NameExpr['val']
                                             ]
                                             $recv: #NameExpr['dup']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $cond: #NameExpr['$install_name']
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^RUBY_SO_NAME$/']
                              ]
                              $then: #IfExpr[
                                 $then: #Next[
                                    $expr: #List[
                                       $expression: #AssignExpr[
                                          $left: #Indexer[
                                             $base: #NameExpr['vars']
                                             $index: #List[
                                                $expression: #NameExpr['name']
                                             ]
                                          ]
                                          $right: #ApplyExpr[
                                             $recv: #AssignExpr[
                                                $left: #NameExpr['so_name']
                                                $right: #NameExpr['val']
                                             ]
                                             $recv: #NameExpr['dup']
                                          ]
                                       ]
                                    ]
                                 ]
                                 $cond: #NameExpr['$so_name']
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^arch$/']
                              ]
                              $then: #IfExpr[
                                 $cond: #ApplyExpr[
                                    $recv: #NameExpr['val']
                                    $recv: #NameExpr['empty?']
                                 ]
                                 $then: #AssignExpr[
                                    $left: #NameExpr['val']
                                    $right: #NameExpr['arch']
                                 ]
                                 $else: #AssignExpr[
                                    $left: #NameExpr['arch']
                                    $right: #NameExpr['val']
                                 ]
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^sitearch$/']
                              ]
                              $then: #IfExpr[
                                 $then: #AssignExpr[
                                    $left: #NameExpr['val']
                                    $right: #StringExpr['$(arch)']
                                 ]
                                 $cond: #ApplyExpr[
                                    $recv: #NameExpr['val']
                                    $recv: #NameExpr['empty?']
                                 ]
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^DESTDIR$/']
                              ]
                              $then: #Next['next']
                           ]
                        ]
                     ]
                     $statement: #Case[
                        $cond: #NameExpr['val']
                        $body: #List[
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^\\$\\(ac_\\w+\\)$/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^\\$\\{ac_\\w+\\}$/']
                              ]
                              $then: #Next['next']
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^\\$ac_\\w+$/']
                              ]
                              $then: #Next['next']
                           ]
                        ]
                     ]
                     $statement: #IfExpr[
                        $cond: #Match[
                           $left: #Regex['/^program_transform_name$/']
                           $right: #NameExpr['name']
                        ]
                        $then: #List[
                           $statement: #ApplyExpr[
                              $recv: #NameExpr['val']
                              $recv: #NameExpr['sub!']
                              $param: #List[
                                 $expression: #Regex['/\\As(\\\\?\\W)(?:\\^|\\${1,2})\\1\\1(;|\\z)/']
                                 $expression: #StringExpr['']
                              ]
                           ]
                           $statement: #IfExpr[
                              $cond: #ApplyExpr[
                                 $recv: #NameExpr['val']
                                 $recv: #NameExpr['empty?']
                              ]
                              $then: #List[
                                 $statement: #LOrAssign[
                                    $left: #NameExpr['$install_name']
                                    $right: #StringExpr['ruby']
                                 ]
                                 $statement: #Next['next']
                              ]
                           ]
                           $statement: #Unless[
                              $cond: #NameExpr['$install_name']
                              $then: #List[
                                 $statement: #AssignExpr[
                                    $left: #NameExpr['$install_name']
                                    $right: #StringExpr['ruby']
                                 ]
                                 $statement: #ApplyExpr[
                                    $recv: #NameExpr['val']
                                    $recv: #NameExpr['gsub!']
                                    $param: #List[
                                       $expression: #Regex['/\\$\\$/']
                                       $expression: #StringExpr['$']
                                    ]
                                 ]
                                 $statement: #ApplyExpr[
                                    $recv: #NameExpr['val']
                                    $recv: #NameExpr['scan']
                                    $param: #List[
                                       $expression: #Regex['%r[\\G[\\s;]*(/(?:\\\\.|[^/])*/)?([sy])(\\\\?\\W)((?:(?!\\3)(?:\\\\.|.))*)\\3((?:(?!\\3)(?:\\\\.|.))*)\\3([gi]*)]']
                                    ]
                                    $body: #Block[
                                       $param: #MultipleLeftHandSideExpression[
                                          $item: #NameExpr['addr']
                                          $item: #NameExpr['cmd']
                                          $item: #NameExpr['sep']
                                          $item: #NameExpr['pat']
                                          $item: #NameExpr['rep']
                                          $item: #NameExpr['opt']
                                       ]
                                       $body: #List[
                                          $statement: #IfExpr[
                                             $cond: #NameExpr['addr']
                                             $then: #OrExpr[
                                                $left: #Match[
                                                   $left: #ApplyExpr[
                                                      $recv: #NameExpr['Regexp']
                                                      $recv: #NameExpr['new']
                                                      $param: #List[
                                                         $expression: #Indexer[
                                                            $recv: #NameExpr['addr']
                                                            $index: #List[
                                                               $expression: #Regex['/\\A\\/(.*)\\/\\z/']
                                                               $expression: #IntExpr['1']
                                                            ]
                                                         ]
                                                      ]
                                                   ]
                                                   $right: #NameExpr['$install_name']
                                                ]
                                                $right: #Next['next']
                                             ]
                                          ]
                                          $statement: #Case[
                                             $cond: #NameExpr['cmd']
                                             $body: #List[
                                                $when: #When[
                                                   $cond: #List[
                                                      $expression: #StringExpr['s']
                                                   ]
                                                   $then: #List[
                                                      $statement: #AssignExpr[
                                                         $left: #NameExpr['pat']
                                                         $right: #ApplyExpr[
                                                            $recv: #NameExpr['Regexp']
                                                            $recv: #NameExpr['new']
                                                            $param: #List[
                                                               $expression: #NameExpr['pat']
                                                               $expression: #ApplyExpr[
                                                                  $recv: #NameExpr['opt']
                                                                  $recv: #NameExpr['include?']
                                                                  $param: #List[
                                                                     $expression: #StringExpr['i']
                                                                  ]
                                                               ]
                                                            ]
                                                         ]
                                                      ]
                                                      $statement: #IfExpr[
                                                         $cond: #ApplyExpr[
                                                            $recv: #NameExpr['opt']
                                                            $recv: #NameExpr['include?']
                                                            $param: #List[
                                                               $expression: #StringExpr['g']
                                                            ]
                                                         ]
                                                         $then: #ApplyExpr[
                                                            $recv: #NameExpr['$install_name']
                                                            $recv: #NameExpr['gsub!']
                                                            $param: #List[
                                                               $expression: #NameExpr['pat']
                                                               $expression: #NameExpr['rep']
                                                            ]
                                                         ]
                                                         $else: #ApplyExpr[
                                                            $recv: #NameExpr['$install_name']
                                                            $recv: #NameExpr['sub!']
                                                            $param: #List[
                                                               $expression: #NameExpr['pat']
                                                               $expression: #NameExpr['rep']
                                                            ]
                                                         ]
                                                      ]
                                                   ]
                                                ]
                                                $when: #When[
                                                   $cond: #List[
                                                      $expression: #StringExpr['y']
                                                   ]
                                                   $then: #ApplyExpr[
                                                      $recv: #NameExpr['$install_name']
                                                      $recv: #NameExpr['tr!']
                                                      $param: #List[
                                                         $expression: #ApplyExpr[
                                                            $recv: #NameExpr['Regexp']
                                                            $recv: #NameExpr['quote']
                                                            $param: #List[
                                                               $expression: #NameExpr['pat']
                                                            ]
                                                         ]
                                                         $expression: #NameExpr['rep']
                                                      ]
                                                   ]
                                                ]
                                             ]
                                          ]
                                       ]
                                    ]
                                 ]
                              ]
                           ]
                        ]
                     ]
                     $statement: #AssignExpr[
                        $left: #NameExpr['eq']
                        $right: #ApplyExpr[
                           $base: #NameExpr['win32']
                           $recv: #NameExpr['&']
                           $param: #List[
                              $expression: #Conditional[
                                 $cond: #Indexer[
                                    $recv: #NameExpr['vars']
                                    $index: #List[
                                       $expression: #NameExpr['name']
                                    ]
                                 ]
                                 $then: #StringExpr['<< "\\n"']
                                 $else: #StringExpr['=']
                              ]
                           ]
                        ]
                     ]
                     $statement: #AssignExpr[
                        $left: #Indexer[
                           $base: #NameExpr['vars']
                           $index: #List[
                              $expression: #NameExpr['name']
                           ]
                        ]
                        $right: #NameExpr['val']
                     ]
                     $statement: #IfExpr[
                        $cond: #EqExpr[
                           $left: #NameExpr['name']
                           $right: #StringExpr['configure_args']
                        ]
                        $then: #ApplyExpr[
                           $recv: #NameExpr['val']
                           $recv: #NameExpr['gsub!']
                           $param: #List[
                              $expression: #Regex['/--with-out-ext/']
                              $expression: #StringExpr['--without-ext']
                           ]
                        ]
                     ]
                     $statement: #AssignExpr[
                        $left: #NameExpr['val']
                        $right: #ApplyExpr[
                           $recv: #ApplyExpr[
                              $recv: #NameExpr['val']
                              $recv: #NameExpr['gsub']
                              $param: #List[
                                 $expression: #Regex['/\\$(?:\\$|\\{?(\\w+)\\}?)/']
                              ]
                              $body: #Block[
                                 $body: #Conditional[
                                    $cond: #MatchedRegex['$1']
                                    $then: #StringExpr[
                                       $inner: #MatchedRegex['$1']
                                    ]
                                    $else: #BuiltInVariable['$&']
                                 ]
                              ]
                           ]
                           $recv: #NameExpr['dump']
                        ]
                     ]
                     $statement: #Case[
                        $cond: #NameExpr['name']
                        $body: #List[
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^prefix$/']
                              ]
                              $then: #AssignExpr[
                                 $left: #NameExpr['val']
                                 $right: #StringExpr[
                                    $inner: #NameExpr['val']
                                 ]
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^ARCH_FLAG$/']
                              ]
                              $then: #IfExpr[
                                 $then: #AssignExpr[
                                    $left: #NameExpr['val']
                                    $right: #StringExpr[
                                       $inner: #NameExpr['val']
                                    ]
                                 ]
                                 $cond: #NameExpr['universal']
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^UNIVERSAL_ARCHNAMES$/']
                              ]
                              $then: #IfExpr[
                                 $then: #MultipleAssign[
                                    $left: #MultipleLeftHandSideExpression[
                                       $item: #NameExpr['universal']
                                       $item: #NameExpr['val']
                                    ]
                                    $right: #MultipleRightHandSideExpression[
                                       $expression: #NameExpr['val']
                                       $expression: #StringExpr['universal']
                                    ]
                                 ]
                                 $cond: #NameExpr['universal']
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^arch$/']
                              ]
                              $then: #IfExpr[
                                 $cond: #NameExpr['universal']
                                 $then: #ApplyExpr[
                                    $recv: #NameExpr['val']
                                    $recv: #NameExpr['sub!']
                                    $param: #List[
                                       $expression: #Regex['/universal/']
                                       $expression: #ParcentNotation['%q[#{arch && universal[/(?:\\A|\\s)#{Regexp.quote(arch)}=(\\S+)/, 1] || \'\\&\'}]']
                                    ]
                                 ]
                              ]
                           ]
                           $when: #When[
                              $cond: #List[
                                 $expression: #Regex['/^oldincludedir$/']
                              ]
                              $then: #IfExpr[
                                 $then: #AssignExpr[
                                    $left: #NameExpr['val']
                                    $right: #AddExpr[
                                       $left: #StringExpr['"$(SDKROOT)"']
                                       $right: #NameExpr['val']
                                    ]
                                 ]
                                 $cond: #Match[
                                    $left: #Regex['/darwin/']
                                    $right: #NameExpr['arch']
                                 ]
                              ]
                           ]
                        ]
                     ]
                     $statement: #AssignExpr[
                        $left: #NameExpr['v']
                        $right: #StringExpr[
                           $inner: #NameExpr['name']
                           $inner: #NameExpr['eq']
                           $inner: #NameExpr['val']
                        ]
                     ]
                     $statement: #IfExpr[
                        $cond: #Indexer[
                           $recv: #NameExpr['fast']
                           $index: #List[
                              $expression: #NameExpr['name']
                           ]
                        ]
                        $then: #LShiftExpr[
                           $left: #NameExpr['v_fast']
                           $right: #NameExpr['v']
                        ]
                        $else: #LShiftExpr[
                           $left: #NameExpr['v_others']
                           $right: #NameExpr['v']
                        ]
                     ]
                     $statement: #Case[
                        $cond: #NameExpr['name']
                        $body: #List[
                           $when: #When[
                              $cond: #List[
                                 $expression: #StringExpr['RUBY_PROGRAM_VERSION']
                              ]
                              $then: #AssignExpr[
                                 $left: #NameExpr['version']
                                 $right: #Indexer[
                                    $recv: #NameExpr['val']
                                    $index: #List[
                                       $expression: #Regex['/\\A"(.*)"\\z/']
                                       $expression: #IntExpr['1']
                                    ]
                                 ]
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['drive']
         $right: #EqExpr[
            $left: #Field[
               $recv: #NameExpr['File']
               $name: #NameExpr['PATH_SEPARATOR']
            ]
            $right: #StringExpr[';']
         ]
      ]
      $statement: #SFuncDecl[
         $path: #NameExpr['vars']
         $name: #NameExpr['expand']
         $param: #List[
            $param: #Param[
               $param: #NameExpr['val']
            ]
            $param: #OptionalParam[
               $name: #NameExpr['config']
               $default: #Self['self']
            ]
         ]
         $body: #BlockExpr[
            $main: #List[
               $statement: #AssignExpr[
                  $left: #NameExpr['newval']
                  $right: #ApplyExpr[
                     $recv: #NameExpr['val']
                     $recv: #NameExpr['gsub']
                     $param: #List[
                        $expression: #Regex['/\\$\\$|\\$\\(([^()]+)\\)|\\$\\{([^{}]+)\\}/']
                     ]
                     $body: #Block[
                        $body: #List[
                           $statement: #AssignExpr[
                              $left: #NameExpr['var']
                              $right: #BuiltInVariable['$&']
                           ]
                           $statement: #IfExpr[
                              $cond: #NotExpr[
                                 $expr: #AssignExpr[
                                    $left: #NameExpr['v']
                                    $right: #LOr[
                                       $left: #MatchedRegex['$1']
                                       $right: #MatchedRegex['$2']
                                    ]
                                 ]
                              ]
                              $then: #StringExpr['$']
                              $else: #IfExpr[
                                 $cond: #AssignExpr[
                                    $left: #NameExpr['key']
                                    $right: #Indexer[
                                       $recv: #NameExpr['config']
                                       $index: #List[
                                          $expression: #AssignExpr[
                                             $left: #NameExpr['v']
                                             $right: #Indexer[
                                                $recv: #NameExpr['v']
                                                $index: #List[
                                                   $expression: #Regex['/\\A[^:]+(?=(?::(.*?)=(.*))?\\z)/']
                                                ]
                                             ]
                                          ]
                                       ]
                                    ]
                                 ]
                                 $then: #List[
                                    $statement: #MultipleAssign[
                                       $left: #MultipleLeftHandSideExpression[
                                          $item: #NameExpr['pat']
                                          $item: #NameExpr['sub']
                                       ]
                                       $right: #MultipleRightHandSideExpression[
                                          $expression: #MatchedRegex['$1']
                                          $expression: #MatchedRegex['$2']
                                       ]
                                    ]
                                    $statement: #AssignExpr[
                                       $left: #Indexer[
                                          $base: #NameExpr['config']
                                          $index: #List[
                                             $expression: #NameExpr['v']
                                          ]
                                       ]
                                       $right: #FalseExpr['false']
                                    ]
                                    $statement: #AssignExpr[
                                       $left: #Indexer[
                                          $base: #NameExpr['config']
                                          $index: #List[
                                             $expression: #NameExpr['v']
                                          ]
                                       ]
                                       $right: #ApplyExpr[
                                          #Self['self']
                                          $recv: #NameExpr['expand']
                                          $param: #List[
                                             $expression: #NameExpr['key']
                                             $expression: #NameExpr['config']
                                          ]
                                       ]
                                    ]
                                    $statement: #IfExpr[
                                       $then: #AssignExpr[
                                          $left: #NameExpr['key']
                                          $right: #ApplyExpr[
                                             $recv: #NameExpr['key']
                                             $recv: #NameExpr['gsub']
                                             $param: #List[
                                                $expression: #Regex['/#{Regexp.quote(pat)}(?=\\s|\\z)/n']
                                             ]
                                             $body: #Block[
                                                $body: #NameExpr['sub']
                                             ]
                                          ]
                                       ]
                                       $cond: #NameExpr['pat']
                                    ]
                                    $statement: #NameExpr['key']
                                 ]
                                 $else: #NameExpr['var']
                              ]
                           ]
                        ]
                     ]
                  ]
               ]
               $statement: #Unless[
                  $then: #ApplyExpr[
                     $recv: #NameExpr['val']
                     $recv: #NameExpr['replace']
                     $param: #List[
                        $expression: #NameExpr['newval']
                     ]
                  ]
                  $cond: #EqExpr[
                     $left: #NameExpr['newval']
                     $right: #NameExpr['val']
                  ]
               ]
               $statement: #NameExpr['val']
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['prefix']
         $right: #ApplyExpr[
            $recv: #NameExpr['vars']
            $recv: #NameExpr['expand']
            $param: #List[
               $expression: #LOrAssign[
                  $left: #Indexer[
                     $base: #NameExpr['vars']
                     $index: #List[
                        $expression: #StringExpr['prefix']
                     ]
                  ]
                  $right: #StringExpr['']
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['rubyarchdir']
         $right: #ApplyExpr[
            $recv: #NameExpr['vars']
            $recv: #NameExpr['expand']
            $param: #List[
               $expression: #LOrAssign[
                  $left: #Indexer[
                     $base: #NameExpr['vars']
                     $index: #List[
                        $expression: #StringExpr['rubyarchdir']
                     ]
                  ]
                  $right: #StringExpr['']
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['relative_archdir']
         $right: #Conditional[
            $cond: #ApplyExpr[
               $recv: #NameExpr['rubyarchdir']
               $recv: #NameExpr['rindex']
               $param: #List[
                  $expression: #NameExpr['prefix']
                  $expression: #IntExpr['0']
               ]
            ]
            $then: #Indexer[
               $recv: #NameExpr['rubyarchdir']
               $index: #List[
                  $expression: #ClosedRange[
                     #ApplyExpr[
                        $recv: #NameExpr['prefix']
                        $recv: #NameExpr['size']
                     ]
                     #MinusExpr[
                        $expr: #IntExpr['1']
                     ]
                  ]
               ]
            ]
            $else: #NameExpr['rubyarchdir']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['puts']
         $param: #List[
            $expression: #ParcentNotation['%[\\\n# frozen-string-literal: false\n# This file was created by #{mkconfig} when ruby was built.  It contains\n# build information for ruby which is used e.g. by mkmf to build\n# compatible native extensions.  Any changes made to this file will be\n# lost the next time ruby is built.\n\nmodule RbConfig\n  RUBY_VERSION.start_with?("#{version[/^[0-9]+\\.[0-9]+\\./] || version}") or\n    raise "ruby lib version (#{version}) doesn\'t match executable version (\\#{RUBY_VERSION})"\n\n]']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #StringExpr[
               $inner: #ApplyExpr[
                  $recv: #NameExpr['relative_archdir']
                  $recv: #NameExpr['dump']
               ]
            ]
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #StringExpr['  DESTDIR = ']
            $expression: #Conditional[
               $cond: #NameExpr['drive']
               $then: #StringExpr['TOPDIR && TOPDIR[/\\\\A[a-z]:/i] || ']
               $else: #StringExpr['']
            ]
            $expression: #StringExpr['\'\' unless defined? DESTDIR\\n']
         ]
      ]
      $statement: #IfExpr[
         $then: #LShiftExpr[
            $left: #NameExpr['print']
            $right: #StringExpr['ARCH']
         ]
         $cond: #NameExpr['universal']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['arch_flag']
         $right: #LOr[
            $left: #Indexer[
               $recv: #NameExpr['ENV']
               $index: #List[
                  $expression: #StringExpr['ARCHFLAGS']
               ]
            ]
            $right: #ApplyExpr[
               $base: #AssignExpr[
                  $left: #NameExpr['e']
                  $right: #Indexer[
                     $recv: #NameExpr['ENV']
                     $index: #List[
                        $expression: #StringExpr['RC_ARCHS']
                     ]
                  ]
               ]
               $recv: #NameExpr['&']
               $param: #List[
                  $expression: #ApplyExpr[
                     $recv: #ApplyExpr[
                        $recv: #ApplyExpr[
                           $recv: #ApplyExpr[
                              $recv: #NameExpr['e']
                              $recv: #NameExpr['split']
                           ]
                           $recv: #NameExpr['uniq']
                        ]
                        $recv: #NameExpr['map']
                        $body: #Block[
                           $param: #NameExpr['a']
                           $body: #StringExpr[
                              $inner: #NameExpr['a']
                           ]
                        ]
                     ]
                     $recv: #NameExpr['join']
                     $param: #List[
                        $expression: #StringExpr[' ']
                     ]
                  ]
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['arch']
         $right: #ApplyExpr[
            $base: #NameExpr['arch_flag']
            $recv: #NameExpr['&']
            $param: #List[
               $expression: #Indexer[
                  $recv: #NameExpr['arch_flag']
                  $index: #List[
                     $expression: #Regex['/\\A\\s*-arch\\s+(\\S+)\\s*\\z/']
                     $expression: #IntExpr['1']
                  ]
               ]
            ]
         ]
      ]
      $statement: #NameExpr['ARCH']
      $statement: #IfExpr[
         $then: #ApplyExpr[
            #Self['self']
            $recv: #NameExpr['print']
            $param: #List[
               $expression: #StringExpr[
                  $inner: #NameExpr['universal']
               ]
            ]
         ]
         $cond: #NameExpr['universal']
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #StringExpr['  CONFIG = {}\\n']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #StringExpr['  CONFIG[\\"DESTDIR\\"] = DESTDIR\\n']
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['versions']
         $right: #List['{}']
      ]
      $statement: #ApplyExpr[
         $recv: #NameExpr['IO']
         $recv: #NameExpr['foreach']
         $param: #List[
            $expression: #ApplyExpr[
               $recv: #NameExpr['File']
               $recv: #NameExpr['join']
               $param: #List[
                  $expression: #NameExpr['srcdir']
                  $expression: #StringExpr['version.h']
               ]
            ]
         ]
         $body: #Block[
            $param: #NameExpr['l']
            $body: #List[
               $statement: #AssignExpr[
                  $left: #NameExpr['m']
                  $right: #ApplyExpr[
                     $recv: #Regex['/^\\s*#\\s*define\\s+RUBY_(PATCHLEVEL)\\s+(-?\\d+)/']
                     $recv: #NameExpr['match']
                     $param: #List[
                        $expression: #NameExpr['l']
                     ]
                  ]
               ]
               $statement: #IfExpr[
                  $cond: #NameExpr['m']
                  $then: #List[
                     $statement: #AssignExpr[
                        $left: #Indexer[
                           $base: #NameExpr['versions']
                           $index: #List[
                              $expression: #Indexer[
                                 $recv: #NameExpr['m']
                                 $index: #List[
                                    $expression: #IntExpr['1']
                                 ]
                              ]
                           ]
                        ]
                        $right: #Indexer[
                           $recv: #NameExpr['m']
                           $index: #List[
                              $expression: #IntExpr['2']
                           ]
                        ]
                     ]
                     $statement: #IfExpr[
                        $then: #Break['break']
                        $cond: #EqExpr[
                           $left: #ApplyExpr[
                              $recv: #NameExpr['versions']
                              $recv: #NameExpr['size']
                           ]
                           $right: #IntExpr['4']
                        ]
                     ]
                     $statement: #Next['next']
                  ]
               ]
               $statement: #AssignExpr[
                  $left: #NameExpr['m']
                  $right: #ApplyExpr[
                     $recv: #Regex['/^\\s*#\\s*define\\s+RUBY_VERSION\\s+\\W?([.\\d]+)/']
                     $recv: #NameExpr['match']
                     $param: #List[
                        $expression: #NameExpr['l']
                     ]
                  ]
               ]
               $statement: #IfExpr[
                  $cond: #NameExpr['m']
                  $then: #List[
                     $statement: #MultipleAssign[
                        $left: #MultipleLeftHandSideExpression[
                           $item: #Indexer[
                              $base: #NameExpr['versions']
                              $index: #List[
                                 $expression: #StringExpr['MAJOR']
                              ]
                           ]
                           $item: #Indexer[
                              $base: #NameExpr['versions']
                              $index: #List[
                                 $expression: #StringExpr['MINOR']
                              ]
                           ]
                           $item: #Indexer[
                              $base: #NameExpr['versions']
                              $index: #List[
                                 $expression: #StringExpr['TEENY']
                              ]
                           ]
                        ]
                        $right: #ApplyExpr[
                           $recv: #Indexer[
                              $recv: #NameExpr['m']
                              $index: #List[
                                 $expression: #IntExpr['1']
                              ]
                           ]
                           $recv: #NameExpr['split']
                           $param: #List[
                              $expression: #StringExpr['.']
                           ]
                        ]
                     ]
                     $statement: #IfExpr[
                        $then: #Break['break']
                        $cond: #EqExpr[
                           $left: #ApplyExpr[
                              $recv: #NameExpr['versions']
                              $recv: #NameExpr['size']
                           ]
                           $right: #IntExpr['4']
                        ]
                     ]
                     $statement: #Next['next']
                  ]
               ]
            ]
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #ParcentNotation['%w[MAJOR MINOR TEENY PATCHLEVEL]']
         $recv: #NameExpr['each']
         $body: #Block[
            $param: #NameExpr['v']
            $body: #ApplyExpr[
               #Self['self']
               $recv: #NameExpr['print']
               $param: #List[
                  $expression: #StringExpr[
                     $inner: #ApplyExpr[
                        $recv: #NameExpr['v']
                        $recv: #NameExpr['dump']
                     ]
                     $inner: #ApplyExpr[
                        $recv: #Indexer[
                           $recv: #NameExpr['versions']
                           $index: #List[
                              $expression: #NameExpr['v']
                           ]
                        ]
                        $recv: #NameExpr['dump']
                     ]
                  ]
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['dest']
         $right: #Conditional[
            $cond: #NameExpr['drive']
            $then: #Regex['%r\'= "(?!\\$[\\(\\{])(?i:[a-z]:)\'']
            $else: #Regex['%r\'= "(?!\\$[\\(\\{])\'']
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['v_disabled']
         $right: #List['{}']
      ]
      $statement: #ApplyExpr[
         $recv: #NameExpr['v_others']
         $recv: #NameExpr['collect!']
         $body: #Block[
            $param: #NameExpr['x']
            $body: #IfExpr[
               $cond: #StrictEquals[
                  $left: #Regex['/^\\s*CONFIG\\["((?!abs_|old)[a-z]+(?:_prefix|dir))"\\]/']
                  $right: #NameExpr['x']
               ]
               $then: #List[
                  $statement: #AssignExpr[
                     $left: #NameExpr['name']
                     $right: #MatchedRegex['$1']
                  ]
                  $statement: #IfExpr[
                     $cond: #Match[
                        $left: #Regex['/= "no"$/']
                        $right: #NameExpr['x']
                     ]
                     $then: #List[
                        $statement: #AssignExpr[
                           $left: #Indexer[
                              $base: #NameExpr['v_disabled']
                              $index: #List[
                                 $expression: #NameExpr['name']
                              ]
                           ]
                           $right: #TrueExpr['true']
                        ]
                        $statement: #ApplyExpr[
                           $recv: #NameExpr['v_others']
                           $recv: #NameExpr['delete']
                           $param: #List[
                              $expression: #NameExpr['name']
                           ]
                        ]
                        $statement: #Next['next']
                     ]
                  ]
                  $statement: #ApplyExpr[
                     $recv: #NameExpr['x']
                     $recv: #NameExpr['sub']
                     $param: #List[
                        $expression: #NameExpr['dest']
                        $expression: #StringExpr['= "$(DESTDIR)']
                     ]
                  ]
               ]
               $else: #NameExpr['x']
            ]
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #NameExpr['v_others']
         $recv: #NameExpr['compact!']
      ]
      $statement: #IfExpr[
         $cond: #NameExpr['$install_name']
         $then: #List[
            $statement: #IfExpr[
               $cond: #AndExpr[
                  $left: #NameExpr['install_name']
                  $right: #EqExpr[
                     $left: #ApplyExpr[
                        $recv: #NameExpr['vars']
                        $recv: #NameExpr['expand']
                        $param: #List[
                           $expression: #StringExpr['$(RUBY_INSTALL_NAME)']
                        ]
                     ]
                     $right: #NameExpr['$install_name']
                  ]
               ]
               $then: #AssignExpr[
                  $left: #NameExpr['$install_name']
                  $right: #NameExpr['install_name']
               ]
            ]
            $statement: #LShiftExpr[
               $left: #NameExpr['v_fast']
               $right: #AddExpr[
                  $left: #AddExpr[
                     $left: #StringExpr['  CONFIG[\\"ruby_install_name\\"] = \\"']
                     $right: #NameExpr['$install_name']
                  ]
                  $right: #StringExpr['\\"\\n']
               ]
            ]
            $statement: #LShiftExpr[
               $left: #NameExpr['v_fast']
               $right: #AddExpr[
                  $left: #AddExpr[
                     $left: #StringExpr['  CONFIG[\\"RUBY_INSTALL_NAME\\"] = \\"']
                     $right: #NameExpr['$install_name']
                  ]
                  $right: #StringExpr['\\"\\n']
               ]
            ]
         ]
      ]
      $statement: #IfExpr[
         $cond: #NameExpr['$so_name']
         $then: #List[
            $statement: #IfExpr[
               $cond: #AndExpr[
                  $left: #NameExpr['so_name']
                  $right: #EqExpr[
                     $left: #ApplyExpr[
                        $recv: #NameExpr['vars']
                        $recv: #NameExpr['expand']
                        $param: #List[
                           $expression: #StringExpr['$(RUBY_SO_NAME)']
                        ]
                     ]
                     $right: #NameExpr['$so_name']
                  ]
               ]
               $then: #AssignExpr[
                  $left: #NameExpr['$so_name']
                  $right: #NameExpr['so_name']
               ]
            ]
            $statement: #LShiftExpr[
               $left: #NameExpr['v_fast']
               $right: #AddExpr[
                  $left: #AddExpr[
                     $left: #StringExpr['  CONFIG[\\"RUBY_SO_NAME\\"] = \\"']
                     $right: #NameExpr['$so_name']
                  ]
                  $right: #StringExpr['\\"\\n']
               ]
            ]
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $variadic: #Variadic[
               $base: #NameExpr['v_fast']
            ]
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $variadic: #Variadic[
               $base: #NameExpr['v_others']
            ]
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #HereDocument['  CONFIG["UNICODE_VERSION"] = #{$unicode_version.dump}\n']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #HereDocument['  CONFIG["SDKROOT"] = ENV["SDKROOT"] || "" # don\'t run xcrun everytime, usually useless.\n']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['print']
         $param: #List[
            $expression: #HereDocument['  CONFIG["archdir"] = "$(rubyarchdir)"\n  CONFIG["topdir"] = File.dirname(__FILE__)\n  MAKEFILE_CONFIG = {}\n  CONFIG.each{|k,v| MAKEFILE_CONFIG[k] = v.dup}\n  def RbConfig::expand(val, config = CONFIG)\n    newval = val.gsub(/\\\\$\\\\$|\\\\$\\\\(([^()]+)\\\\)|\\\\$\\\\{([^{}]+)\\\\}/) {\n      var = $&\n      if !(v = $1 || $2)\n\t\'$\'\n      elsif key = config[v = v[/\\\\A[^:]+(?=(?::(.*?)=(.*))?\\\\z)/]]\n\tpat, sub = $1, $2\n\tconfig[v] = false\n\tconfig[v] = RbConfig::expand(key, config)\n\tkey = key.gsub(/\\#{Regexp.quote(pat)}(?=\\\\s|\\\\z)/n) {sub} if pat\n\tkey\n      else\n\tvar\n      end\n    }\n    val.replace(newval) unless newval == val\n    val\n  end\n  CONFIG.each_value do |val|\n    RbConfig::expand(val)\n  end\n\n  # returns the absolute pathname of the ruby command.\n  def RbConfig.ruby\n    File.join(\n      RbConfig::CONFIG["bindir"],\n      RbConfig::CONFIG["ruby_install_name"] + RbConfig::CONFIG["EXEEXT"]\n    )\n  end\nend\nCROSS_COMPILING = nil unless defined? CROSS_COMPILING\n']
         ]
      ]
   ]
   #Comsumed['comsumed']
]
