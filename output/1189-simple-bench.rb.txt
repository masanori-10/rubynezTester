#Source[
   #List[
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['require']
         $param: #List[
            $expression: #StringExpr['benchmark']
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['foo0']
         $param: #List['']
         $body: #BlockExpr[
            $main: #Empty['']
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['foo3']
         $param: #List[
            $param: #Param[
               $param: #NameExpr['a']
            ]
            $param: #Param[
               $param: #NameExpr['b']
            ]
            $param: #Param[
               $param: #NameExpr['c']
            ]
         ]
         $body: #BlockExpr[
            $main: #Empty['']
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['foo6']
         $param: #List[
            $param: #Param[
               $param: #NameExpr['a']
            ]
            $param: #Param[
               $param: #NameExpr['b']
            ]
            $param: #Param[
               $param: #NameExpr['c']
            ]
            $param: #Param[
               $param: #NameExpr['d']
            ]
            $param: #Param[
               $param: #NameExpr['e']
            ]
            $param: #Param[
               $param: #NameExpr['f']
            ]
         ]
         $body: #BlockExpr[
            $main: #Empty['']
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['iter0']
         $param: #List['']
         $body: #BlockExpr[
            $main: #Yield['yield']
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['iter1']
         $param: #List['']
         $body: #BlockExpr[
            $main: #Yield[
               $param: #List[
                  $expression: #IntExpr['1']
               ]
            ]
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['iter3']
         $param: #List['']
         $body: #BlockExpr[
            $main: #Yield[
               $param: #List[
                  $expression: #IntExpr['1']
                  $expression: #IntExpr['2']
                  $expression: #IntExpr['3']
               ]
            ]
         ]
      ]
      $statement: #FuncDecl[
         $name: #NameExpr['iter6']
         $param: #List['']
         $body: #BlockExpr[
            $main: #Yield[
               $param: #List[
                  $expression: #IntExpr['1']
                  $expression: #IntExpr['2']
                  $expression: #IntExpr['3']
                  $expression: #IntExpr['4']
                  $expression: #IntExpr['5']
                  $expression: #IntExpr['6']
               ]
            ]
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #ClosedRange[
            #IntExpr['1']
            #IntExpr['6']
         ]
         $recv: #NameExpr['each']
         $body: #Block[
            $param: #NameExpr['i']
            $body: #List[
               $statement: #AssignExpr[
                  $left: #NameExpr['kws']
                  $right: #ApplyExpr[
                     $recv: #ClosedRange[
                        #IntExpr['1']
                        #NameExpr['i']
                     ]
                     $recv: #NameExpr['map']
                     $body: #Block[
                        $param: #NameExpr['e']
                        $body: #StringExpr[
                           $inner: #NameExpr['e']
                           $inner: #NameExpr['e']
                        ]
                     ]
                  ]
               ]
               $statement: #ApplyExpr[
                  #Self['self']
                  $recv: #NameExpr['eval']
                  $param: #List[
                     $expression: #ParcentNotation['%Q{\n    def foo_kw#{i}(#{kws.join(\', \')})\n    end\n  }']
                  ]
               ]
               $statement: #AssignExpr[
                  $left: #NameExpr['kws']
                  $right: #ApplyExpr[
                     $recv: #ClosedRange[
                        #IntExpr['1']
                        #NameExpr['i']
                     ]
                     $recv: #NameExpr['map']
                     $body: #Block[
                        $param: #NameExpr['e']
                        $body: #StringExpr[
                           $inner: #NameExpr['e']
                        ]
                     ]
                  ]
               ]
               $statement: #ApplyExpr[
                  #Self['self']
                  $recv: #NameExpr['eval']
                  $param: #List[
                     $expression: #ParcentNotation['%Q{\n    def foo_required_kw#{i}(#{kws.join(\', \')})\n    end\n  }']
                  ]
               ]
            ]
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #ClosedRange[
            #IntExpr['1']
            #IntExpr['6']
         ]
         $recv: #NameExpr['each']
         $body: #Block[
            $param: #NameExpr['i']
            $body: #List[
               $statement: #AssignExpr[
                  $left: #NameExpr['kws']
                  $right: #ApplyExpr[
                     $recv: #ClosedRange[
                        #IntExpr['1']
                        #NameExpr['i']
                     ]
                     $recv: #NameExpr['map']
                     $body: #Block[
                        $param: #NameExpr['e']
                        $body: #StringExpr[
                           $inner: #NameExpr['e']
                           $inner: #NameExpr['e']
                        ]
                     ]
                  ]
               ]
               $statement: #ApplyExpr[
                  #Self['self']
                  $recv: #NameExpr['eval']
                  $param: #List[
                     $expression: #ParcentNotation['%Q{\n    def foo_complex_kw#{i}(#{kws.join(\', \')})\n    end\n  }']
                  ]
               ]
            ]
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #ClosedRange[
            #IntExpr['1']
            #IntExpr['6']
         ]
         $recv: #NameExpr['each']
         $body: #Block[
            $param: #NameExpr['i']
            $body: #List[
               $statement: #AssignExpr[
                  $left: #NameExpr['kws']
                  $right: #ApplyExpr[
                     $recv: #ClosedRange[
                        #IntExpr['1']
                        #NameExpr['i']
                     ]
                     $recv: #NameExpr['map']
                     $body: #Block[
                        $param: #NameExpr['e']
                        $body: #StringExpr[
                           $inner: #NameExpr['e']
                           $inner: #NameExpr['e']
                        ]
                     ]
                  ]
               ]
               $statement: #ApplyExpr[
                  #Self['self']
                  $recv: #NameExpr['eval']
                  $param: #List[
                     $expression: #ParcentNotation['%Q{\n    def iter_kw#{i}\n      yield #{kws.join(\', \')}\n    end\n  }']
                  ]
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['ary1']
         $right: #Array[
            $index: #List[
               $expression: #IntExpr['1']
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['ary2']
         $right: #Array[
            $index: #List[
               $expression: #Array[
                  $index: #List[
                     $expression: #IntExpr['1']
                     $expression: #IntExpr['2']
                     $expression: #IntExpr['3']
                     $expression: #IntExpr['4']
                     $expression: #IntExpr['5']
                  ]
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['test_methods']
         $right: #ParcentNotation['%Q{\n  # empty 1\n  # empty 2\n  foo0\n  foo3 1, 2, 3\n  foo6 1, 2, 3, 4, 5, 6\n  foo_kw1\n  foo_kw2\n  foo_kw3\n  foo_kw4\n  foo_kw5\n  foo_kw6\n  foo_kw6 k1: 1\n  foo_kw6 k1: 1, k2: 2\n  foo_kw6 k1: 1, k2: 2, k3: 3\n  foo_kw6 k1: 1, k2: 2, k3: 3, k4: 4\n  foo_kw6 k1: 1, k2: 2, k3: 3, k4: 4, k5: 5\n  foo_kw6 k1: 1, k2: 2, k3: 3, k4: 4, k5: 5, k6: 6\n  foo_required_kw1 k1: 1\n  foo_required_kw2 k1: 1, k2: 2\n  foo_required_kw3 k1: 1, k2: 2, k3: 3\n  foo_required_kw4 k1: 1, k2: 2, k3: 3, k4: 4\n  foo_required_kw5 k1: 1, k2: 2, k3: 3, k4: 4, k5: 5\n  foo_required_kw6 k1: 1, k2: 2, k3: 3, k4: 4, k5: 5, k6: 6\n  foo_complex_kw1\n  foo_complex_kw2\n  foo_complex_kw3\n  foo_complex_kw4\n  foo_complex_kw5\n  foo_complex_kw6\n  foo_complex_kw6 k1: 1\n  foo_complex_kw6 k1: 1, k2: 2\n  foo_complex_kw6 k1: 1, k2: 2, k3: 3\n  foo_complex_kw6 k1: 1, k2: 2, k3: 3, k4: 4\n  foo_complex_kw6 k1: 1, k2: 2, k3: 3, k4: 4, k5: 5\n  foo_complex_kw6 k1: 1, k2: 2, k3: 3, k4: 4, k5: 5, k6: 6\n  iter0{}\n  iter1{}\n  iter1{|a|}\n  iter3{}\n  iter3{|a|}\n  iter3{|a, b, c|}\n  iter6{}\n  iter6{|a|}\n  iter6{|a, b, c, d, e, f, g|}\n  iter0{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  iter_kw1{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  iter_kw2{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  iter_kw3{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  iter_kw4{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  iter_kw5{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  iter_kw6{|k1: nil, k2: nil, k3: nil, k4: nil, k5: nil, k6: nil|}\n  ary1.each{|e|}\n  ary1.each{|e,|}\n  ary1.each{|a, b, c, d, e|}\n  ary2.each{|e|}\n  ary2.each{|e,|}\n  ary2.each{|a, b, c, d, e|}\n}']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['N']
         $right: #IntExpr['10_000_000']
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['max_line']
         $right: #ApplyExpr[
            $recv: #ApplyExpr[
               $recv: #NameExpr['test_methods']
               $recv: #NameExpr['each_line']
            ]
            $recv: #NameExpr['max_by']
            $body: #Block[
               $param: #NameExpr['line']
               $body: #ApplyExpr[
                  $recv: #ApplyExpr[
                     $recv: #NameExpr['line']
                     $recv: #NameExpr['strip']
                  ]
                  $recv: #NameExpr['size']
               ]
            ]
         ]
      ]
      $statement: #AssignExpr[
         $left: #NameExpr['max_size']
         $right: #ApplyExpr[
            $recv: #ApplyExpr[
               $recv: #NameExpr['max_line']
               $recv: #NameExpr['strip']
            ]
            $recv: #NameExpr['size']
         ]
      ]
      $statement: #ApplyExpr[
         $recv: #NameExpr['Benchmark']
         $recv: #NameExpr['bm']
         $param: #List[
            $expression: #NameExpr['max_size']
         ]
         $body: #Block[
            $param: #NameExpr['x']
            $body: #List[
               $statement: #AssignExpr[
                  $left: #NameExpr['str']
                  $right: #ApplyExpr[
                     $recv: #ApplyExpr[
                        $recv: #ApplyExpr[
                           $recv: #NameExpr['test_methods']
                           $recv: #NameExpr['each_line']
                        ]
                        $recv: #NameExpr['map']
                        $body: #Block[
                           $param: #NameExpr['line']
                           $body: #List[
                              $statement: #ApplyExpr[
                                 $recv: #NameExpr['line']
                                 $recv: #NameExpr['strip!']
                              ]
                              $statement: #IfExpr[
                                 $then: #Next['next']
                                 $cond: #ApplyExpr[
                                    $recv: #NameExpr['line']
                                    $recv: #NameExpr['empty?']
                                 ]
                              ]
                              $statement: #ParcentNotation['%Q{\n      x.report(#{line.dump}){\n        i = 0\n        while i<#{N}\n          #{line}\n          i+=1\n        end\n      }\n    }']
                           ]
                        ]
                     ]
                     $recv: #NameExpr['join']
                     $param: #List[
                        $expression: #StringExpr['\\n']
                     ]
                  ]
               ]
               $statement: #ApplyExpr[
                  #Self['self']
                  $recv: #NameExpr['eval']
                  $param: #List[
                     $expression: #NameExpr['str']
                  ]
               ]
            ]
         ]
      ]
   ]
   #Comsumed['comsumed']
]
