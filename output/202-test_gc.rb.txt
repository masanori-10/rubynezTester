#Source[
   #List[
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['assert_normal_exit']
         $param: #List[
            $expression: #ParcentNotation['%q{\na = []\nms = "a".."k"\n("A".."Z").each do |mod|\n  mod = eval("module #{mod}; self; end")\n  ms.each do |meth|\n    iseq = RubyVM::InstructionSequence.compile("module #{mod}; def #{meth}; end; end")\n    GC.stress = true\n    iseq.eval\n    GC.stress = false\n  end\n  o = Object.new.extend(mod)\n  ms.each do |meth|\n    o.send(meth)\n  end\nend\n}']
            $expression: #StringExpr['[ruby-dev:39453]']
         ]
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['assert_normal_exit']
         $param: #List[
            $expression: #ParcentNotation['%q{\na = []\nms = "a".."k"\n("A".."Z").each do |mod|\n  mod = eval("module #{mod}; self; end")\n  ms.each do |meth|\n    GC.stress = true\n    mod.module_eval {define_method(meth) {}}\n    GC.stress = false\n  end\n  o = Object.new.extend(mod)\n  ms.each do |meth|\n    o.send(meth)\n  end\nend\n}']
            $expression: #StringExpr['[ruby-dev:39453]']
         ]
      ]
   ]
   #Comsumed['comsumed']
]
