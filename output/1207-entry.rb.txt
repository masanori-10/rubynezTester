#Source[
   #List[
      $statement: #AssignExpr[
         $left: #NameExpr['_']
         $right: #StringExpr['s %sSATISFIABLE']
      ]
      $statement: #ApplyExpr[
         #Self['self']
         $recv: #NameExpr['puts']
         $param: #List[
            $command: #ApplyExpr[
               #Self['self']
               $recv: #NameExpr['eval']
               $param: #List[
                  $expression: #AddExpr[
                     $left: #ApplyExpr[
                        $recv: #ApplyExpr[
                           $recv: #BuiltInVariable['$<']
                           $recv: #NameExpr['read']
                        ]
                        $recv: #NameExpr['gsub']
                        $param: #List[
                           $expression: #Regex['/.*p.*?(\\d+).*?$|\\d+/m']
                        ]
                        $body: #Block[
                           $body: #Conditional[
                              $cond: #MatchedRegex['$1']
                              $then: #MulExpr[
                                 $left: #ParcentNotation['%w[?-* +\'=-\'=~/#{\'(-?)\'* }-*=(?=]']
                                 $right: #MatchedRegex['$1']
                              ]
                              $else: #Conditional[
                                 $cond: #GtExpr[
                                    $left: #BuiltInVariable['$&']
                                    $right: #StringExpr['0']
                                 ]
                                 $then: #StringExpr['\\\\#$&$|']
                                 $else: #StringExpr['$)(?=']
                              ]
                           ]
                        ]
                     ]
                     $right: #StringExpr[')/x?[_%p%i=0,[*$~].map{|x|x>?-?:v:eval(x+?1)*i-=1}*" "]:_%:UN']
                  ]
               ]
            ]
         ]
      ]
   ]
   #Comsumed['comsumed']
]
